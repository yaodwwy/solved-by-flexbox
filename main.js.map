{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap f5b3990cefc548ee0410","webpack:///./~/autotrack/lib/utilities.js","webpack:///./~/autotrack/lib/provide.js","webpack:///./~/autotrack/lib/usage.js","webpack:///./~/autotrack/lib/constants.js","webpack:///./~/autotrack/lib/method-chain.js","webpack:///./~/autotrack/lib/store.js","webpack:///./~/autotrack/~/dom-utils/lib/matches.js","webpack:///./~/autotrack/lib/session.js","webpack:///./~/autotrack/~/dom-utils/lib/closest.js","webpack:///./~/autotrack/~/dom-utils/lib/parents.js","webpack:///./assets/javascript/analytics.js","webpack:///./assets/javascript/supports.js","webpack:///./assets/javascript/main.js","webpack:///./~/autotrack/lib/event-emitter.js","webpack:///./~/autotrack/lib/plugins/clean-url-tracker.js","webpack:///./~/autotrack/lib/plugins/event-tracker.js","webpack:///./~/autotrack/lib/plugins/max-scroll-tracker.js","webpack:///./~/autotrack/lib/plugins/media-query-tracker.js","webpack:///./~/autotrack/lib/plugins/outbound-link-tracker.js","webpack:///./~/autotrack/lib/plugins/page-visibility-tracker.js","webpack:///./~/autotrack/lib/plugins/social-widget-tracker.js","webpack:///./~/autotrack/~/dom-utils/lib/delegate.js","webpack:///./~/autotrack/~/dom-utils/lib/get-attributes.js","webpack:///./~/autotrack/~/dom-utils/lib/parse-url.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","createFieldsObj","defaultFields","userFields","tracker","arguments","length","undefined","hitFilter","target","event","originalBuildHitTask","buildHitTask","model","set","assign","getAttributeFields","element","prefix","attributes","__WEBPACK_IMPORTED_MODULE_0_dom_utils__","attributeFields","keys","forEach","attribute","indexOf","field","camelCase","slice","debounce","fn","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","withTimeout","callback","called","deferUntilPluginsLoaded","trackingId","ref","queueMap","processQueue","send","__WEBPACK_IMPORTED_MODULE_1__method_chain__","remove","queue","push","originalMethod","add","str","replace","match","p1","toUpperCase","capitalize","charAt","isObject","_typeof","toArray","isArray","now","Date","uuid","Symbol","iterator","obj","constructor","_len2","sources","_key2","len","source","key","b","a","Math","random","toString","provide","pluginName","pluginConstructor","gaAlias","window","GoogleAnalyticsObject","q","gaDevIds","__WEBPACK_IMPORTED_MODULE_0__constants__","gaplugins","__WEBPACK_IMPORTED_MODULE_1__utilities__","trackUsage","plugin","trackVersion","trackPlugin","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","toAdd","flipBitOn","index","substr","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","_classCallCheck","instance","Constructor","TypeError","getOrCreateMethodChain","context","methodName","methodChain","instances","filter","h","MethodChain","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","_this","this","isTask","test","originalMethodReference","boundMethodChain","wrappedMethod","lastBoundMethod","methodOverride","overrideMethod","rebindMethodChain","splice","destroy","method","previousMethod","bind","__WEBPACK_IMPORTED_MODULE_1__lib_delegate__","__WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__","__WEBPACK_IMPORTED_MODULE_6__lib_parse_url__","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","initStorageListener","addEventListener","storageListener","isListening","removeStorageListener","removeEventListener","store","oldData","defaults_","parse","oldValue","newData","newValue","cache_","emit","data","JSON","err","__WEBPACK_IMPORTED_MODULE_0__event_emitter__","browserSupportsLocalStorage","Store","_EventEmitter","defaults","getPrototypeOf","key_","namespace","join","localStorage","setItem","removeItem","getItem","isSupported_","get_","set_","stringify","clear_","matches","nodeType","matchesSelector","item","selector","nativeMatches","node","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","__WEBPACK_IMPORTED_MODULE_0__method_chain__","__WEBPACK_IMPORTED_MODULE_1__store__","__WEBPACK_IMPORTED_MODULE_2__utilities__","Session","timeZone","DEFAULT_TIMEOUT","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","defaultProps","hitTime","isExpired","getOrCreate","id","getId","sessionData","oldHitTime","currentDate","oldHitDate","datesAreDifferentInTimezone","d1","d2","format","sessionControl","sessionWillStart","sessionWillEnd","closest","shouldCheckSelf","parent","parentElements","concat","__WEBPACK_IMPORTED_MODULE_1__parents__","__WEBPACK_IMPORTED_MODULE_0__matches__","parents","list","_defineProperty","init","trackError","dimensions","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","BREAKPOINT","RESOLUTION","ORIENTATION","HIT_SOURCE","URL_QUERY_PARAMS","METRIC_VALUE","CLIENT_ID","HIT_TYPE","HIT_TIME","HIT_ID","WINDOW_ID","VISIBILITY_STATE","TRACKING_VERSION","metrics","PAGE_VISIBLE","MAX_SCROLL_PERCENTAGE","PAGE_LOADS","ga","createTracker","trackErrors","trackCustomDimensions","requireAutotrackPlugins","fieldsObj","eventCategory","eventAction","eventLabel","message","stack","nonInteraction","siteSpeedSampleRate","loadErrorEvents","__e","trackErrorEvent","error","lineno","colno","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","_tracker$set","qt","String","document","visibilityState","stripQuery","queryDimensionIndex","getDefinitionIndex","indexFilename","trailingSlash","sessionTimeout","maxScrollMetricIndex","definitions","dimensionIndex","items","media","events","sendInitialPageview","pageLoadsMetricIndex","visibleMetricIndex","definition","exec","supports","style","body","flexbox","main","__WEBPACK_IMPORTED_MODULE_1__supports__","div","createElement","className","innerHTML","insertBefore","firstChild","__WEBPACK_IMPORTED_MODULE_0__analytics__","Promise","src","js","onload","onerror","Error","head","appendChild","EventEmitter","registry_","getRegistry_","eventRegistry","handlerIndex","eventCount","__WEBPACK_IMPORTED_MODULE_1__constants__","__WEBPACK_IMPORTED_MODULE_2__method_chain__","__WEBPACK_IMPORTED_MODULE_3__provide__","__WEBPACK_IMPORTED_MODULE_4__usage__","__WEBPACK_IMPORTED_MODULE_5__utilities__","CleanUrlTracker","opts","defaultOpts","queryDimension","trackerGetOverride","buildHitTaskOverride","location","page","cleanUrlFields","_this2","cleanedFieldsObj","url","pathname","parts","split","isFilename","search","urlFieldsFilter","userCleanedFieldsObj","__WEBPACK_IMPORTED_MODULE_1__provide__","__WEBPACK_IMPORTED_MODULE_2__usage__","__WEBPACK_IMPORTED_MODULE_3__utilities__","EventTracker","attributePrefix","handleEvents","delegates","composed","useCapture","getAttribute","type","transport","hitType","getPageHeight","html","documentElement","max","offsetHeight","scrollHeight","__WEBPACK_IMPORTED_MODULE_2__provide__","__WEBPACK_IMPORTED_MODULE_3__session__","__WEBPACK_IMPORTED_MODULE_4__store__","__WEBPACK_IMPORTED_MODULE_5__usage__","__WEBPACK_IMPORTED_MODULE_6__utilities__","MaxScrollTracker","increaseThreshold","pagePath","getPagePath","handleScroll","trackerSetOverride","session","listenForMaxScrollChanges","getMaxScrollPercentageForCurrentPage","pageHeight","scrollPos","pageYOffset","windowHeight","innerHeight","scrollPercentage","min","round","sessionId","clear","maxScrollPercentage","stopListeningForMaxScrollChanges","increaseAmount","setMaxScrollPercentageForCurrentPage","sendMaxScrollEvent","lastPagePath","eventValue","_store$set","getMediaList","mediaMap","matchMedia","MediaQueryTracker","changeTemplate","changeTimeout","changeListeners","processMediaQueries","mediaName","getMatchName","addChangeListeners","mql","handleChanges","addListener","listener","removeListener","linkClickWillUnloadCurrentPage","link","metaKey","ctrlKey","shiftKey","altKey","which","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","href","navigator","sendBeacon","defaultPrevented","preventDefault","hitCallback","parseUrlFn","hostname","protocol","VISIBLE","PAGE_ID","SECONDS","PageVisibilityTracker","visibleThreshold","lastPageState","visibleThresholdTimeout_","isInitialPageviewSent_","handleChange","handleWindowUnload","handleExternalStoreSet","on","sendPageview","isPageLoad","time","state","pageId","sendPageLoad","lastStoredChange","getAndValidateChangeData","change","sendPageVisibilityEvent","_ref","delta","getTimeSinceLastStoredChange","deltaInSeconds","queueTime","_defaultFields","_ref2","_this3","fields","_ref4","__WEBPACK_IMPORTED_MODULE_0__provide__","__WEBPACK_IMPORTED_MODULE_1__usage__","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","unbind","Event","subscribe","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","removeFacebookEventHandlers","removeTwitterEventHandlers","delegate","ancestor","eventType","delegateTarget","composedPath","__WEBPACK_IMPORTED_MODULE_1__matches__","__WEBPACK_IMPORTED_MODULE_0__closest__","getAttributes","attrs","map","attr","parseUrl","cache","port","HTTP_PORT","HTTPS_PORT","host","DEFAULT_PORT","origin","hash","RegExp"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,sBAGA1B,IAAA2B,EAAA,MDMM,SAAUvB,EAAQwB,EAAqB5B,GAE7C,YEjCO,SAAS6B,GACZC,EAAeC,GAC+C,GADnCC,GACmCC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OADzBE,GACrCC,EAA8DH,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OAAlDE,GAAWE,EAAuCJ,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OAA9BE,GAAWG,EAAmBL,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OAAXE,EACrD,IAAwB,kBAAbC,GAAyB,CAClC,GAAMG,GAAuBP,EAAQb,IAAI,eACzC,QACEqB,aAAc,SAAuBC,GACnCA,EAAMC,IAAIZ,EAAe,MAAM,GAC/BW,EAAMC,IAAIX,EAAY,MAAM,GAC5BK,EAAUK,EAAOJ,EAAQC,GACzBC,EAAqBE,KAIzB,MAAOE,MAAWb,EAAeC,GAa9B,QAASa,GAAmBC,EAASC,GAC1C,GAAMC,GAAa/C,EAAAK,EAAA2C,EAAA,GAAcH,GAC3BI,IAgBN,OAdAlC,QAAOmC,KAAKH,GAAYI,QAAQ,SAASC,GAEvC,GAAkC,IAA9BA,EAAUC,QAAQP,IAAiBM,GAAaN,EAAS,KAAM,CACjE,GAAIpC,GAAQqC,EAAWK,EAGV,SAAT1C,IAAiBA,GAAQ,GAChB,SAATA,IAAkBA,GAAQ,EAE9B,IAAM4C,GAAQC,EAAUH,EAAUI,MAAMV,EAAOZ,QAC/Ce,GAAgBK,GAAS5C,KAItBuC,EA6BF,QAASQ,GAASC,EAAIC,GAC3B,GAAIC,SACJ,OAAO,YAAkB,OAAAC,GAAA5B,UAAAC,OAAN4B,EAAMC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,GAAA/B,UAAA+B,EACvBC,cAAaL,GACbA,EAAUM,WAAW,iBAAMR,gBAAMI,IAAOH,IAerC,QAASQ,GAAYC,GAAuB,GAAbT,GAAa1B,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAN,IACvCoC,GAAS,EACPX,EAAK,WACJW,IACHA,GAAS,EACTD,KAIJ,OADAF,YAAWR,EAAIC,GACRD,EAcF,QAASY,GAAwBtC,EAAS0B,GAC/C,GAAMa,GAAavC,EAAQb,IAAI,cACzBqD,EAAMC,EAASF,GAAcE,EAASF,OAEtCG,EAAe,WACnBT,aAAaO,EAAIZ,SACbY,EAAIG,MACNC,EAAA,EAAYC,OAAO7C,EAAS,OAAQwC,EAAIG,YAEnCF,GAASF,GAEhBC,EAAIM,MAAM3B,QAAQ,SAACO,GAAD,MAAQA,OAG5BO,cAAaO,EAAIZ,SACjBY,EAAIZ,QAAUM,WAAWQ,EAAc,GACvCF,EAAIM,MAAQN,EAAIM,UAChBN,EAAIM,MAAMC,KAAKrB,GAEVc,EAAIG,OACPH,EAAIG,KAAO,SAACK,GACV,MAAO,YACLN,IACAM,4BAGJJ,EAAA,EAAYK,IAAIjD,EAAS,OAAQwC,EAAIG,OAgClC,QAASpB,GAAU2B,GACxB,MAAOA,GAAIC,QAAQ,gBAAiB,SAASC,EAAOC,GAClD,MAAOA,GAAGC,gBAUP,QAASC,GAAWL,GACzB,MAAOA,GAAIM,OAAO,GAAGF,cAAgBJ,EAAI1B,MAAM,GAS1C,QAASiC,GAAS/E,GACvB,MAAuB,eAAhB,KAAOA,EAAP,YAAAgF,EAAOhF,KAA+B,OAAVA,EAU9B,QAASiF,GAAQjF,GACtB,MAAOqD,OAAM6B,QAAQlF,GAASA,GAASA,GAOlC,QAASmF,KACd,OAAQ,GAAIC,MFtLmBlE,EAAuB,EAAIC,EAC3BD,EAAuB,EAAIgB,EAE3BhB,EAAuB,EAAI6B,EAC3B7B,EAAuB,EAAIuC,EAC3BvC,EAAuB,EAAI0C,EAC7BtE,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOe,KAElEf,EAAuB,EAAI2D,EAC3B3D,EAAuB,EAAI6D,EAC3B7D,EAAuB,EAAI+D,EAC3B/D,EAAuB,EAAIiE,EAC7B7F,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOmE,IAC9E,IAAI/C,GAA0ChD,EAAoB,GAC9D4E,EAA8C5E,EAAoB,GACvF0F,EAA4B,kBAAXM,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOxE,UAAY,eAAkB0E,IEyDhQzB,KAiDO9B,EAAS5B,OAAO4B,QAAU,SAASN,GAAoB,OAAA+D,GAAAnE,UAAAC,OAATmE,EAAStC,MAAAqC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,EAAA,GAAArE,UAAAqE,EAClE,KAAK,GAAIjG,GAAI,EAAGkG,EAAMF,EAAQnE,OAAQ7B,EAAIkG,EAAKlG,IAAK,CAClD,GAAMmG,GAASzF,OAAOsF,EAAQhG,GAC9B,KAAK,GAAIoG,KAAOD,GACVzF,OAAOS,UAAUC,eAAelB,KAAKiG,EAAQC,KAC/CpE,EAAOoE,GAAOD,EAAOC,IAI3B,MAAOpE,IA2DI0D,EAAO,QAASW,GAAEC,GAAG,MAAOA,IAAGA,EAAgB,GAAdC,KAAKC,UAAaF,EAAE,GAAGG,SAAS,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM3B,QAAQ,SAASuB,KFqG1H,SAAUtG,EAAQwB,EAAqB5B,GAE7C,YGlVe,SAAS+G,GAAQC,EAAYC,GAC1C,GAAMC,GAAUC,OAAOC,uBAAyB,IAChDD,QAAOD,GAAWC,OAAOD,IAAY,WAAkB,OAAArD,GAAA5B,UAAAC,OAAN4B,EAAMC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,GAAA/B,UAAA+B,IACpDmD,OAAOD,GAASG,EAAIF,OAAOD,GAASG,OAAStC,KAAKjB,IAIrDqD,OAAOG,SAAWH,OAAOG,aACrBH,OAAOG,SAASjE,QAAQkE,EAAA,GAAU,GACpCJ,OAAOG,SAASvC,KAAKwC,EAAA,GAIvBJ,OAAOD,GAAS,UAAWF,EAAYC,GAGvCE,OAAOK,UAAYL,OAAOK,cAC1BL,OAAOK,UAAUxH,EAAAK,EAAAoH,EAAA,GAAWT,IAAeC,EHkUZrF,EAAuB,EAAImF,CACvC,IAAIQ,GAA2CvH,EAAoB,GG/WxFyH,EAAAzH,EAAA,IHoaM,SAAUI,EAAQwB,EAAqB5B,GAE7C,YI3XO,SAAS0H,GAAW1F,EAAS2F,GAClCC,EAAa5F,GACb6F,EAAY7F,EAAS2F,GASvB,QAASG,GAAgBC,GACvB,MAAOC,UAASD,GAAO,IAAK,IAAIjB,SAAS,GAS3C,QAASmB,GAAgBC,GACvB,MAAOF,UAASE,GAAO,IAAK,GAAGpB,SAAS,IAU1C,QAASqB,GAASjD,EAAKqB,GACrB,GAAIrB,EAAIhD,OAASqE,EAEf,IADA,GAAI6B,GAAQ7B,EAAMrB,EAAIhD,OACfkG,GACLlD,EAAM,IAAMA,EACZkD,GAGJ,OAAOlD,GAWT,QAASmD,GAAUnD,EAAKoD,GACtB,MAAOpD,GAAIqD,OAAO,EAAGD,GAAS,EAAIpD,EAAIqD,OAAOD,EAAQ,GAUvD,QAAST,GAAY7F,EAASwG,GAC5B,GAAMC,GAAWzG,EAAQb,IAAI,IAAMoG,EAAA,GAC/BmB,EAAWP,EAASL,EAAgBW,GAAWE,EAGnDD,GAAWL,EAAUK,EAAUC,EAAeH,GAG9CxG,EAAQU,IAAI,IAAM6E,EAAA,EAAaU,EAAgBS,IAQjD,QAASd,GAAa5F,GACpBA,EAAQU,IAAI,IAAM6E,EAAA,EAAeA,EAAA,GJ6SJvH,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOgH,KAClEhH,EAAuB,EAAI8F,CIxa5D,IAAAH,GAAAvH,EAAA,GAoBa4I,GACXC,kBAAmB,EACnBC,cAAe,EACfC,mBAAoB,EACpBC,oBAAqB,EACrBC,sBAAuB,EACvBC,sBAAuB,EACvBC,wBAAyB,EACzBC,sBAAuB,EACvBC,mBAAoB,EACpBC,mBAAoB,IAIhBX,EAAe5H,OAAOmC,KAAK0F,GAAS1G,QJ6fpC,SAAU9B,EAAQwB,EAAqB5B,GAE7C,YAC+BA,GAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAO2H,KACpEvJ,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAO4H,KACpExJ,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAO6H,KACpEzJ,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAO8H,KKriBnG1J,EAAAW,EAAAiB,EAAA,qBAAA+H,IAiBO,IAAMJ,GAAU,QACVC,EAAS,SAETC,EAAgB,MAChBC,EAAc,MAEdC,EAAiB,aL0iBxB,SAAUvJ,EAAQwB,EAAqB5B,GAE7C,YAGA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCM5ahH,QAASC,GAAuBC,EAASC,GACvC,GAAIC,GAAcC,EACbC,OAAO,SAACC,GAAD,MAAOA,GAAEL,SAAWA,GAAWK,EAAEJ,YAAcA,IAAY,EAMvE,OAJKC,KACHA,EAAc,GAAII,GAAYN,EAASC,GACvCE,EAAUrF,KAAKoF,IAEVA,ENkaT,GAAIK,GAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MMxiB1hBM,KAOeG,ENskBH,WM1iBhB,QAAAA,GAAYN,EAASC,GAAY,GAAAa,GAAAC,IAAApB,GAAAoB,KAAAT,GAC/BS,KAAKf,QAAUA,EACfe,KAAKd,WAAaA,EAClBc,KAAKC,OAAS,QAAQC,KAAKhB,GAE3Bc,KAAKG,wBAA0BH,KAAKC,OAChChB,EAAQ9I,IAAI+I,GAAcD,EAAQC,GAEtCc,KAAKb,eACLa,KAAKI,oBAGLJ,KAAKK,cAAgB,WAInB,MAFIN,GAAKK,iBAAiBL,EAAKK,iBAAiBlJ,OAAS,GAElDoJ,yBAILN,KAAKC,OACPhB,EAAQvH,IAAIwH,EAAYc,KAAKK,eAE7BpB,EAAQC,GAAcc,KAAKK,cNwpB/B,MApIAb,GAAaD,EAAa,OACxB9D,IAAK,MAQL/F,MAAO,SMzkBEuJ,EAASC,EAAYqB,GAC9BvB,EAAuBC,EAASC,GAAYjF,IAAIsG,MNqlBhD9E,IAAK,SACL/F,MAAO,SM5kBKuJ,EAASC,EAAYqB,GACjCvB,EAAuBC,EAASC,GAAYrF,OAAO0G,ON2nBrDf,EAAaD,IACX9D,IAAK,MACL/F,MAAO,SMrlBL8K,GACFR,KAAKb,YAAYpF,KAAKyG,GACtBR,KAAKS,uBN8lBLhF,IAAK,SACL/F,MAAO,SMxlBF8K,GACL,GAAMlD,GAAQ0C,KAAKb,YAAY9G,QAAQmI,EACnClD,IAAS,IACX0C,KAAKb,YAAYuB,OAAOpD,EAAO,GAC3B0C,KAAKb,YAAYjI,OAAS,EAC5B8I,KAAKS,oBAELT,KAAKW,cNomBTlF,IAAK,oBACL/F,MAAO,WM1lBPsK,KAAKI,mBACL,KAAK,GAAIQ,GAAQvL,EAAI,EAAGuL,EAASZ,KAAKb,YAAY9J,GAAIA,IAAK,CACzD,GAAMwL,GAAiBb,KAAKI,iBAAiB/K,EAAI,IAC7C2K,KAAKG,wBAAwBW,KAAKd,KAAKf,QAC3Ce,MAAKI,iBAAiBrG,KAAK6G,EAAOC,QNmmBpCpF,IAAK,UACL/F,MAAO,WM5lBP,GAAM4H,GAAQ8B,EAAU/G,QAAQ2H,KAC5B1C,IAAS,IACX8B,EAAUsB,OAAOpD,EAAO,GACpB0C,KAAKC,OACPD,KAAKf,QAAQvH,IAAIsI,KAAKd,WAAYc,KAAKG,yBAEvCH,KAAKf,QAAQe,KAAKd,YAAcc,KAAKG,6BNmmBpCZ,IAaoB3I,GAAuB,EAAI,GAelD,SAAUxB,EAAQwB,EAAqB5B,GAE7C,YACqB,IACI+L,IAD6C/L,EAAoB,GACnBA,EAAoB,KAElEgM,GAD8ChM,EAAoB,IACdA,EAAoB,KAGxEiM,GAF6CjM,EAAoB,GACpBA,EAAoB,IAClBA,EAAoB,IAE3DA,GAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOmK,GAA+C,IAEnH/L,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOoK,GAAqD,IAGzHhM,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOqK,GAAgD,KAa/I,SAAU7L,EAAQwB,EAAqB5B,GAE7C,YAKA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASmC,GAA2BC,EAAM5L,GAAQ,IAAK4L,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO7L,GAAyB,gBAATA,IAAqC,kBAATA,GAA8B4L,EAAP5L,EAElO,QAAS8L,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIxC,WAAU,iEAAoEwC,GAAeD,GAAS9K,UAAYT,OAAOyL,OAAOD,GAAcA,EAAW/K,WAAa2E,aAAezF,MAAO4L,EAAUpL,YAAY,EAAO0J,UAAU,EAAM3J,cAAc,KAAesL,IAAYxL,OAAO0L,eAAiB1L,OAAO0L,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GOrnBje,QAASI,KACPxF,OAAOyF,iBAAiB,UAAWC,GACnCC,GAAc,EAQhB,QAASC,KACP5F,OAAO6F,oBAAoB,UAAWH,GACtCC,GAAc,EAQhB,QAASD,GAAgBvK,GACvB,GAAM2K,GAAQ7C,EAAU9H,EAAMmE,IAC9B,IAAIwG,EAAO,CACT,GAAMC,GAAUlN,EAAAK,EAAAoH,EAAA,MAAWwF,EAAME,UAAWC,EAAM9K,EAAM+K,WAClDC,EAAUtN,EAAAK,EAAAoH,EAAA,MAAWwF,EAAME,UAAWC,EAAM9K,EAAMiL,UAExDN,GAAMO,OAASF,EACfL,EAAMQ,KAAK,cAAeH,EAASJ,IAUvC,QAASE,GAAM5G,GACb,GAAIkH,KACJ,IAAIlH,EACF,IACEkH,EAA+BC,KAAKP,MAAM5G,GAC1C,MAAMoH,IAIV,MAAOF,GP+jBY,GAAIG,GAA+C7N,EAAoB,IACnEyH,EAA2CzH,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MOtxB1hBM,KACF0C,GAAc,EAIdgB,SAMiBC,EPizBT,SAAUC,GOtuBpB,QAAAD,GAAYtH,GAAoB,GAAfwH,GAAehM,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,KAAA2H,GAAAoB,KAAA+C,EAAA,IAAAhD,GAAAmB,EAAAlB,MAAA+C,EAAArB,WAAA3L,OAAAmN,eAAAH,IAAAxN,KAAAyK,MAAA,OAE9BD,GAAKoD,KAAO1H,EACZsE,EAAKoC,UAAYc,EAGjBlD,EAAKyC,OAAS,KANgBzC,EPo6BhC,MA7LAsB,GAAU0B,EAAOC,GAEjBxD,EAAauD,EAAO,OAClBtH,IAAK,cAUL/F,MAAO,SOtzBU6D,EAAY6J,EAAWH,GACxC,GAAMxH,IAtBe,YAsBUlC,EAAY6J,GAAWC,KAAK,IAO3D,OAJKjE,GAAU3D,KACb2D,EAAU3D,GAAO,GAAIsH,GAAMtH,EAAKwH,GAC3BnB,GAAaH,KAEbvC,EAAU3D,MPk0BjBA,IAAK,eACL/F,MAAO,WOxzBP,GAAmC,MAA/BoN,EACF,MAAOA,EAGT,KACE3G,OAAOmH,aAAaC,QA7CD,yBA8CnBpH,OAAOmH,aAAaE,WA9CD,aA+CnBV,GAA8B,EAC9B,MAAOF,GACPE,GAA8B,EAEhC,MAAOA,MPo0BPrH,IAAK,OACL/F,MAAO,SO5zBG+F,GACV,MAAOU,QAAOmH,aAAaG,QAAQhI,MPu0BnCA,IAAK,OACL/F,MAAO,SO/zBG+F,EAAK/F,GACfyG,OAAOmH,aAAaC,QAAQ9H,EAAK/F,MPy0BjC+F,IAAK,SACL/F,MAAO,SOl0BK+F,GACZU,OAAOmH,aAAaE,WAAW/H,OPq2BjC+D,EAAauD,IACXtH,IAAK,MACL/F,MAAO,WO90BP,GAAIsK,KAAKwC,OACP,MAAOxC,MAAKwC,MAEZ,IAAIO,EAAMW,eACR,IACE1D,KAAKwC,OAASJ,EAAMW,EAAMY,KAAK3D,KAAKmD,OACpC,MAAMP,IAIV,MAAO5C,MAAKwC,OAASxN,EAAAK,EAAAoH,EAAA,MAAWuD,KAAKmC,UAAWnC,KAAKwC,WP01BvD/G,IAAK,MACL/F,MAAO,SOl1BL4M,GAGF,GAFAtC,KAAKwC,OAASxN,EAAAK,EAAAoH,EAAA,MAAWuD,KAAKmC,UAAWnC,KAAKwC,OAAQF,GAElDS,EAAMW,eACR,IACEX,EAAMa,KAAK5D,KAAKmD,KAAMR,KAAKkB,UAAU7D,KAAKwC,SAC1C,MAAMI,QP61BVnH,IAAK,QACL/F,MAAO,WOn1BP,GADAsK,KAAKwC,UACDO,EAAMW,eACR,IACEX,EAAMe,OAAO9D,KAAKmD,MAClB,MAAMP,QPk2BVnH,IAAK,UACL/F,MAAO,iBOv1BA0J,GAAUY,KAAKmD,MACjBpN,OAAOmC,KAAKkH,GAAWlI,QAC1B6K,QP61BGgB,GO/+B0BF,EAAA,EPw/BNjM,GAAuB,EAAI,GAiDlD,SAAUxB,EAAQwB,EAAqB5B,GAE7C,YQ5jCe,SAAS+O,GAAQlM,EAASqI,GAEvC,GAAIrI,GAA+B,GAApBA,EAAQmM,UAAiB9D,EAAM,CAE5C,GAAmB,gBAARA,IAAqC,GAAjBA,EAAK8D,SAClC,MAAOnM,IAAWqI,GACd+D,EAAgBpM,EAAgCqI,EAC/C,IAAI,UAAYA,GAGrB,IAAK,GAAWgE,GAAP7O,EAAI,EAAS6O,EAAOhE,EAAK7K,GAAIA,IACpC,GAAIwC,GAAWqM,GAAQD,EAAgBpM,EAASqM,GAAO,OAAO,EAKpE,OAAO,EAWT,QAASD,GAAgBpM,EAASsM,GAChC,GAAuB,gBAAZA,GAAsB,OAAO,CACxC,IAAIC,EAAe,MAAOA,GAAc7O,KAAKsC,EAASsM,EAEtD,KAAK,GAAWE,GADVC,EAAQzM,EAAQ0M,WAAWC,iBAAiBL,GACzC9O,EAAI,EAASgP,EAAOC,EAAMjP,GAAIA,IACrC,GAAIgP,GAAQxM,EAAS,OAAO,CAE9B,QAAO,EAlDTjB,EAAA,EAAAmN,CAAA,IAAMU,GAAQtI,OAAOuI,QAAQlO,UACvB4N,EAAgBK,EAAMV,SACtBU,EAAMR,iBACNQ,EAAME,uBACNF,EAAMG,oBACNH,EAAMI,mBACNJ,EAAMK,kBRunCN,SAAU1P,EAAQwB,EAAqB5B,GAE7C,YAMA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAL3F,GAAIgG,GAA8C/P,EAAoB,GAClEgQ,EAAuChQ,EAAoB,GAC3DiQ,EAA2CjQ,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MSzmC1hBM,KAOe8F,ETooCP,WShmCZ,QAAAA,GAAYlO,EAAS4B,EAASuM,GAAUvG,EAAAoB,KAAAkF,GACtClF,KAAKhJ,QAAUA,EACfgJ,KAAKpH,QAAUA,GAAWsM,EAAQE,gBAClCpF,KAAKmF,SAAWA,EAGhBnF,KAAKqF,oBAAsBrF,KAAKqF,oBAAoBvE,KAAKd,MAGzD+E,EAAA,EAAY9K,IAAIjD,EAAS,cAAegJ,KAAKqF,oBAM7C,KACErF,KAAKsF,kBACD,GAAIC,MAAKC,eAAe,SAAUL,SAAUnF,KAAKmF,WACrD,MAAMvC,IAKR,GAAM6C,IACJC,QAAS,EACTC,WAAW,EAEb3F,MAAKiC,MAAQ+C,EAAA,EAAMY,YACf5O,EAAQb,IAAI,cAAe,UAAWsP,GAGrCzF,KAAKiC,MAAM9L,MAAM0P,IACpB7F,KAAKiC,MAAMvK,KAAsCmO,GAAI7Q,EAAAK,EAAA4P,EAAA,OTkxCzD,MAjNAzF,GAAa0F,EAAS,OACpBzJ,IAAK,cAgBL/F,MAAO,SSvoCUsB,EAAS4B,EAASuM,GAEnC,GAAM5L,GAAavC,EAAQb,IAAI,aAC/B,OAAIiJ,GAAU7F,GACL6F,EAAU7F,GAEV6F,EAAU7F,GAAc,GAAI2L,GAAQlO,EAAS4B,EAASuM,OTmsCjE3F,EAAa0F,IACXzJ,IAAK,QACL/F,MAAO,WS7oCP,MAAOsK,MAAKiC,MAAM9L,MAAM0P,MTmqCxBpK,IAAK,YACL/F,MAAO,WS7oCP,IAJ2BuB,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAd+I,KAAK8F,UAIR9F,KAAK8F,QAAS,OAAO,CAG/B,IAAMC,GAAc/F,KAAKiC,MAAM9L,KAI/B,IAAI4P,EAAYJ,UAAW,OAAO,CAElC,IAAMK,GAAaD,EAAYL,OAK/B,IAAIM,EAAY,CACd,GAAMC,GAAc,GAAInL,MAClBoL,EAAa,GAAIpL,MAAKkL,EAC5B,IAAIC,EAAcC,EA/HR,IA+HsBlG,KAAKpH,SACjCoH,KAAKmG,4BAA4BF,EAAaC,GAChD,OAAO,EAKX,OAAO,KT+pCPzK,IAAK,8BACL/F,MAAO,SSrpCmB0Q,EAAIC,GAC9B,QAAKrG,KAAKsF,mBAGDtF,KAAKsF,kBAAkBgB,OAAOF,IAC9BpG,KAAKsF,kBAAkBgB,OAAOD,MTkqCvC5K,IAAK,sBACL/F,MAAO,SSvpCWsE,GAAgB,GAAA+F,GAAAC,IAClC,OAAO,UAACvI,GACNuC,EAAevC,EAEf,IAAM8O,GAAiB9O,EAAMtB,IAAI,kBAC3BqQ,EAAqC,SAAlBD,GAA6BxG,EAAK4F,YACrDc,EAAmC,OAAlBF,EAGjBR,EAAchG,EAAKkC,MAAM9L,KAC/B4P,GAAYL,QAAU1Q,EAAAK,EAAA4P,EAAA,KAClBuB,IACFT,EAAYJ,WAAY,EACxBI,EAAYF,GAAK7Q,EAAAK,EAAA4P,EAAA,MAEfwB,IACFV,EAAYJ,WAAY,GAE1B5F,EAAKkC,MAAMvK,IAAIqO,OToqCjBtK,IAAK,UACL/F,MAAO,WS3pCPqP,EAAA,EAAYlL,OAAOmG,KAAKhJ,QAAS,cAAegJ,KAAKqF,qBACrDrF,KAAKiC,MAAMtB,gBACJvB,GAAUY,KAAKhJ,QAAQb,IAAI,mBTgqC7B+O,IAGoBtO,GAAuB,EAAI,ES9pCxDsO,EAAQE,gBAAkB,ITqqCpB,SAAUhQ,EAAQwB,EAAqB5B,GAE7C,YUx3Ce,SAAS0R,GAAQ7O,EAASsM,GAAmC,GAAzBwC,GAAyB1P,UAAAC,OAAA,OAAAC,KAAAF,UAAA,IAAAA,UAAA,EAC1E,IAAMY,GAA+B,GAApBA,EAAQmM,UAAiBG,EAI1C,IAAK,GAAWyC,GAHVC,GACDF,GAAmB9O,OAAeiP,OAAO9R,EAAAK,EAAA0R,EAAA,GAAQlP,IAE7CxC,EAAI,EAAWuR,EAASC,EAAexR,GAAIA,IAClD,GAAIL,EAAAK,EAAA2R,EAAA,GAAQJ,EAAQzC,GAAW,MAAOyC,GVm3CThQ,EAAuB,EAAI8P,CACvC,IAAIM,GAAyChS,EAAoB,GAC7D+R,EAAyC/R,EAAoB,KAyBhF,SAAUI,EAAQwB,EAAqB5B,GAE7C,YW35Ce,SAASiS,GAAQpP,GAE9B,IADA,GAAMqP,MACCrP,GAAWA,EAAQ0M,YAA6C,GAA/B1M,EAAQ0M,WAAWP,UACzDnM,EAAmCA,EAAQ0M,WAC3C2C,EAAKnN,KAAKlC,EAEZ,OAAOqP,GAZTtQ,EAAA,EAAAqQ,GXo7CM,SAAU7R,EAAQwB,EAAqB5B,GAE7C,YAYA,SAASmS,GAAgBjM,EAAKO,EAAK/F,GAAiK,MAApJ+F,KAAOP,GAAOnF,OAAOC,eAAekF,EAAKO,GAAO/F,MAAOA,EAAOQ,YAAY,EAAMD,cAAc,EAAM2J,UAAU,IAAkB1E,EAAIO,GAAO/F,EAAgBwF,EAX5KlG,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOwQ,KACpEpS,EAAoBW,EAAEiB,EAAqB,IAAK,WAAa,MAAOyQ,IAC9E,IYp5CfC,IZo5C2FtS,EAAoB,IACxBA,EAAoB,IACfA,EAAoB,IACnBA,EAAoB,IAClBA,EAAoB,IAClBA,EAAoB,IACtBA,EAAoB,IACpG,WAAc,QAASuS,GAAcC,EAAKnS,GAAK,GAAIoS,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKzQ,EAAW,KAAM,IAAK,GAAiC0Q,GAA7BC,EAAKN,EAAIxM,OAAOC,cAAmByM,GAAMG,EAAKC,EAAGC,QAAQC,QAAoBP,EAAK1N,KAAK8N,EAAGnS,QAAYL,GAAKoS,EAAKvQ,SAAW7B,GAA3DqS,GAAK,IAAoE,MAAO9E,GAAO+E,GAAK,EAAMC,EAAKhF,EAAO,QAAU,KAAW8E,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,QY15CnaQ,WAAY,aACZC,WAAY,aACZC,YAAa,aACbC,WAAY,aACZC,iBAAkB,aAClBC,aAAc,aACdC,UAAW,aACXC,SAAU,aACVC,SAAU,aACVC,OAAQ,cACRC,UAAW,cACXC,iBAAkB,cAClBC,iBAAkB,gBAOdC,GACJC,aAAc,UACdC,sBAAuB,UACvBC,WAAY,WAQD7B,EAAO,WAElBjL,OAAO+M,GAAK/M,OAAO+M,IAAO,kBAAArQ,GAAA5B,UAAAC,OAAI4B,EAAJC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAA/B,UAAA+B,EAAA,QAAckQ,GAAG7M,EAAI6M,GAAG7M,OAAStC,KAAKjB,IAEhEqQ,IACAC,IACAC,IACAC,KAcWjC,EAAa,WAA8B,GAA7BzE,GAA6B3L,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAAnBsS,EAAmBtS,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,KACtDiS,IAAG,OAAQ,QAASnT,OAAO4B,QACzB6R,cAAe,QACfC,YAAa7G,EAAIhN,MAAQ,kBACzB8T,WAAe9G,EAAI+G,QAAnB,MAA+B/G,EAAIgH,OAAS,oBAC5CC,gBAAgB,GACfN,KAQCJ,EAAgB,WACpBD,GAAG,SAxFe,iBAwFQ,QACxBY,oBAAqB,KAIvBZ,GAAG,MAAO,YAAa,WAwCnBE,EAAc,WAGlB,GAAMW,GAAkB5N,OAAO6N,KAAO7N,OAAO6N,IAAI3N,MAE3C4N,EAAkB,SAAC3S,GAEvB,GAAMiS,IAAaC,cAAe,kBAG5B5G,EAAMtL,EAAM4S,QAChBP,QAAYrS,EAAMqS,QAAlB,KAA8BrS,EAAM6S,OAApC,IAA8C7S,EAAM8S,MAApD,IAGF/C,GAAWzE,EAAK2G,IAdMc,GAAA,EAAAC,GAAA,EAAAC,MAAApT,EAAA,KAkBxB,OAAAqT,GAAAC,EAAkBV,EAAlB/O,OAAAC,cAAAoP,GAAAG,EAAAC,EAAA1C,QAAAC,MAAAqC,GAAA,EAAmC,CACjCJ,EADiCO,EAAA9U,QAlBX,MAAAkN,GAAA0H,GAAA,EAAAC,EAAA3H,EAAA,aAAAyH,GAAAI,EAAAC,QAAAD,EAAAC,SAAA,WAAAJ,EAAA,KAAAC,IAuBxBpO,OAAOyF,iBAAiB,QAASqI,IAO7BZ,EAAwB,WAK5BtT,OAAOmC,KAAKoP,GAAYnP,QAAQ,SAACsD,GAC/ByN,GAAG,MAAO5B,EAAW7L,GA1JN,eA8JjByN,GAAG,SAAClS,GAAY,GAAA2T,EACd3T,GAAQU,KAARiT,KAAAxD,EAAAwD,EACGrD,EAAWuB,iBAxKO,QAuKrB1B,EAAAwD,EAEGrD,EAAWiB,UAAYvR,EAAQb,IAAI,aAFtCgR,EAAAwD,EAGGrD,EAAWqB,UAAY5N,KAH1B4P,MASFzB,GAAG,SAAClS,GACF,GAAMO,GAAuBP,EAAQb,IAAI,eACzCa,GAAQU,IAAI,eAAgB,SAACD,GAC3B,GAAMmT,GAAKnT,EAAMtB,IAAI,cAAgB,CACrCsB,GAAMC,IAAI4P,EAAWmB,SAAUoC,OAAO,GAAI/P,MAAO8P,IAAK,GACtDnT,EAAMC,IAAI4P,EAAWoB,OAAQ3N,KAAQ,GACrCtD,EAAMC,IAAI4P,EAAWkB,SAAU/Q,EAAMtB,IAAI,YAAY,GACrDsB,EAAMC,IAAI4P,EAAWsB,iBAAkBkC,SAASC,iBAAiB,GAEjExT,EAAqBE,QAUrB6R,EAA0B,WAC9BJ,GAAG,UAAW,mBACZ8B,YAAY,EACZC,oBAAqBC,EAAmB5D,EAAWe,kBACnD8C,cAAe,aACfC,cAAe,QAEjBlC,GAAG,UAAW,gBACdA,GAAG,UAAW,oBACZmC,eAAgB,GAChBlG,SAAU,sBACVmG,qBAAsBJ,EAAmBpC,EAAQE,yBAEnDE,GAAG,UAAW,qBACZqC,cAEI3V,KAAM,aACN4V,eAAgB,EAChBC,QACG7V,KAAM,KAAM8V,MAAO,QACnB9V,KAAM,KAAM8V,MAAO,uBACnB9V,KAAM,KAAM8V,MAAO,uBACnB9V,KAAM,KAAM8V,MAAO,yBAItB9V,KAAM,aACN4V,eAAgB,EAChBC,QACG7V,KAAM,KAAQ8V,MAAO,QACrB9V,KAAM,OAAQ8V,MAAO,oEAErB9V,KAAM,KAAQ8V,MAAO,oEAKxB9V,KAAM,cACN4V,eAAgB,EAChBC,QACG7V,KAAM,YAAa8V,MAAO,6BAC1B9V,KAAM,WAAa8V,MAAO,gCAKnCxC,GAAG,UAAW,uBACZyC,QAAS,QAAS,WAAY,iBAEhCzC,GAAG,UAAW,yBACZ0C,qBAAqB,EACrBC,qBAAsBX,EAAmBpC,EAAQG,YACjD6C,mBAAoBZ,EAAmBpC,EAAQC,cAC/C5D,SAAU,sBACVoE,eAAajC,EAAWc,WAAa,2BAEvCc,GAAG,UAAW,wBAWVgC,EAAqB,SAACa,GAAD,OAAiB,OAAOC,KAAKD,GAAY,IAS9DhR,EAAO,QAASW,GAAEC,GACtB,MAAOA,IAAKA,EAAoB,GAAhBC,KAAKC,UAAiBF,EAAI,GAAGG,SAAS,MAChD,MAAQ,KAAO,KAAO,KAAO,MAAM3B,QAAQ,SAAUuB,KZm8CvD,SAAUtG,EAAQwB,EAAqB5B,GAE7C,Ya7uDA,IAAIiX,MACAC,EAAQpB,SAASqB,KAAKD,KAE1BtV,GAAA,GACEwV,QAAS,WACP,MAAOH,GAASG,UAAYH,EAASG,QAAW,aAAeF,IAC3D,eAAiBA,IAAS,sBAAwBA,ObmvDpD,SAAU9W,EAAQwB,EAAqB5B,GAE7C,YchvDA,SAASqX,GAAKzJ,GAEZ,IAAK0J,EAAA,EAASF,UAAW,CACvB,GAAIG,GAAMzB,SAAS0B,cAAc,MACjCD,GAAIE,UAAY,QAChBF,EAAIG,UAAJ,8GAGA5B,SAASqB,KAAKQ,aAAaJ,EAAKzB,SAASqB,KAAKS,YAGhDC,EAAA,IACIjK,GACFiK,EAAA,EAAqBjK,GdouDzB7M,OAAOC,eAAeY,EAAqB,cAAgBlB,OAAO,GAC7C,IAAImX,GAA2C7X,EAAoB,IAC/DsX,EAA0CtX,EAAoB,Kc5tDvF,WACE,SAAUmH,OAAO2Q,UAAW3Q,OAAOnB,WAYrC,SAAoB+R,EAAK/E,GACvB,GAAMgF,GAAKlC,SAAS0B,cAAc,SAClCQ,GAAGD,IAAMA,EACTC,EAAGC,OAAS,iBAAMjF,MAClBgF,EAAGE,QAAU,iBAAMlF,GAAK,GAAImF,OAAM,yBAA2BJ,KAC7DjC,SAASsC,KAAKC,YAAYL,IAjDN,kCAwDMX,GAF1BA,KdqwDI,SAAUjX,EAAQwB,EAAqB5B,GAE7C,YAGA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIS,GAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,Me5yD3gBwO,Efo0DF,Weh0DjB,QAAAA,KAAc1O,EAAAoB,KAAAsN,GACZtN,KAAKuN,afg6DP,MA/EA/N,GAAa8N,IACX7R,IAAK,KACL/F,MAAO,Se10DN4B,EAAOoB,GACRsH,KAAKwN,aAAalW,GAAOyC,KAAKrB,Mfo1D9B+C,IAAK,MACL/F,MAAO,We70D8B,GAAnC4B,GAAmCL,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OAA3BE,GAAWuB,EAAgBzB,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,OAAXE,EAC1B,IAAIG,GAASoB,EAAI,CACf,GAAM+U,GAAgBzN,KAAKwN,aAAalW,GAClCoW,EAAeD,EAAcpV,QAAQK,EACvCgV,IAAgB,GAClBD,EAAc/M,OAAOgN,EAAc,OAGrC1N,MAAKuN,gBf21DP9R,IAAK,OACL/F,MAAO,Sen1DJ4B,GAAgB,OAAAuB,GAAA5B,UAAAC,OAAN4B,EAAMC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,EAAA,GAAA/B,UAAA+B,EACnBgH,MAAKwN,aAAalW,GAAOa,QAAQ,SAACO,GAAD,MAAQA,gBAAMI,Qfk2D/C2C,IAAK,gBACL/F,MAAO,We51DO,GAAAqK,GAAAC,KACV2N,EAAa,CAIjB,OAHA5X,QAAOmC,KAAK8H,KAAKuN,WAAWpV,QAAQ,SAACb,GACnCqW,GAAc5N,EAAKyN,aAAalW,GAAOJ,SAElCyW,Kf02DPlS,IAAK,eACL/F,MAAO,Sej2DI4B,GACX,MAAO0I,MAAKuN,UAAUjW,GAAU0I,KAAKuN,UAAUjW,Wfq2D1CgW,IAGoB1W,GAAuB,EAAI,GAIlD,SAAUxB,EAAQwB,EAAqB5B,GAE7C,YASA,SAASmS,GAAgBjM,EAAKO,EAAK/F,GAAiK,MAApJ+F,KAAOP,GAAOnF,OAAOC,eAAekF,EAAKO,GAAO/F,MAAOA,EAAOQ,YAAY,EAAMD,cAAc,EAAM2J,UAAU,IAAkB1E,EAAIO,GAAO/F,EAAgBwF,EAE3M,QAAS0D,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAV3F,GAAI/G,GAA0ChD,EAAoB,GAC9D4Y,EAA2C5Y,EAAoB,GAC/D6Y,EAA8C7Y,EAAoB,GAClE8Y,EAAyC9Y,EAAoB,GAC7D+Y,EAAuC/Y,EAAoB,GAC3DgZ,EAA2ChZ,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MgB76D1hBmP,EhB+8DgB,WgBt8DpB,QAAAA,GAAYjX,EAASkX,GAAMtP,EAAAoB,KAAAiO,GACzBjZ,EAAAK,EAAA0Y,EAAA,GAAW/W,EAAS+W,EAAA,EAAQlQ,kBAG5B,IAAMsQ,KAONnO,MAAKkO,KAA2ClZ,EAAAK,EAAA2Y,EAAA,GAAOG,EAAaD,GAEpElO,KAAKhJ,QAAUA,EAGfgJ,KAAKoO,eAAiBpO,KAAKkO,KAAKlD,YAC5BhL,KAAKkO,KAAKjD,oBADQ,YAEFjL,KAAKkO,KAAKjD,oBAAwB,KAGtDjL,KAAKqO,mBAAqBrO,KAAKqO,mBAAmBvN,KAAKd,MACvDA,KAAKsO,qBAAuBtO,KAAKsO,qBAAqBxN,KAAKd,MAG3D6N,EAAA,EAAY5T,IAAIjD,EAAS,MAAOgJ,KAAKqO,oBACrCR,EAAA,EAAY5T,IAAIjD,EAAS,eAAgBgJ,KAAKsO,sBhB+kEhD,MApHA9O,GAAayO,IACXxS,IAAK,qBACL/F,MAAO,SgBn9DUsE,GAAgB,GAAA+F,GAAAC,IACjC,OAAO,UAAC1H,GACN,GAAa,QAATA,GAAmBA,GAASyH,EAAKqO,eAAgB,CACnD,GAAM7E,IACJgF,SAAUvU,EAAe,YACzBwU,KAAMxU,EAAe,QAGvB,OADyB+F,GAAK0O,eAAelF,GACrBjR,GAExB,MAAO0B,GAAe1B,OhBk+D1BmD,IAAK,uBACL/F,MAAO,SgBx9DYsE,GAAgB,GAAA0U,GAAA1O,IACnC,OAAO,UAACvI,GACN,GAAMkX,GAAmBD,EAAKD,gBAC5BF,SAAU9W,EAAMtB,IAAI,YACpBqY,KAAM/W,EAAMtB,IAAI,SAElBsB,GAAMC,IAAIiX,EAAkB,MAAM,GAClC3U,EAAevC,OhBs+DjBgE,IAAK,iBACL/F,MAAO,SgB79DM6T,GACb,GAAMqF,GAAM5Z,EAAAK,EAAA2C,EAAA,GACeuR,EAAUiF,MAAQjF,EAAUgF,UAEnDM,EAAWD,EAAIC,QAInB,IAAI7O,KAAKkO,KAAK/C,cAAe,CAC3B,GAAM2D,GAAQD,EAASE,MAAM,IACzB/O,MAAKkO,KAAK/C,eAAiB2D,EAAMA,EAAM5X,OAAS,KAClD4X,EAAMA,EAAM5X,OAAS,GAAK,GAC1B2X,EAAWC,EAAMzL,KAAK,MAO1B,GAA+B,UAA3BrD,KAAKkO,KAAK9C,cACVyD,EAAWA,EAAS1U,QAAQ,OAAQ,QACjC,IAA+B,OAA3B6F,KAAKkO,KAAK9C,cAAwB,CAC3C,GAAM4D,GAAa,SAAS9O,KAAK2O,EAC5BG,IAAqC,KAAvBH,EAAStR,QAAQ,KAClCsR,GAAsB,KAK1B,GAAMF,IACJH,KAAMK,GAAa7O,KAAKkO,KAAKlD,WAA0B,GAAb4D,EAAIK,QAWhD,IATI1F,EAAUgF,WACZI,EAAiBJ,SAAWhF,EAAUgF,UAEpCvO,KAAKoO,iBACPO,EAAiB3O,KAAKoO,gBAClBQ,EAAIK,OAAOzW,MAAM,IAAMoV,EAAA,GAIW,kBAA7B5N,MAAKkO,KAAKgB,gBAA+B,CAElD,GAAMC,GACFnP,KAAKkO,KAAKgB,gBAAgBP,EAAkB3W,EAAA,EAGhD,OAAAmP,IACEqH,KAAMW,EAAqBX,KAC3BD,SAAUY,EAAqBZ,UAC9BvO,KAAKoO,eAAiBe,EAAqBnP,KAAKoO,iBAGnD,MAAOO,MhBm+DTlT,IAAK,SACL/F,MAAO,WgB59DPmY,EAAA,EAAYhU,OAAOmG,KAAKhJ,QAAS,MAAOgJ,KAAKqO,oBAC7CR,EAAA,EAAYhU,OAAOmG,KAAKhJ,QAAS,eAAgBgJ,KAAKsO,0BhBi+DjDL,IgB59DTjZ,GAAAK,EAAAyY,EAAA,GAAQ,kBAAmBG,IhBm+DrB,SAAU7Y,EAAQwB,EAAqB5B,GAE7C,YAOA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAN3F,GAAI/G,GAA0ChD,EAAoB,GAC9Doa,EAAyCpa,EAAoB,GAC7Dqa,EAAuCra,EAAoB,GAC3Dsa,EAA2Cta,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MiBloE1hByQ,EjBgqEa,WiB1pEjB,QAAAA,GAAYvY,EAASkX,GAAM,GAAAnO,GAAAC,IAIzB,IAJyBpB,EAAAoB,KAAAuP,GACzBva,EAAAK,EAAAga,EAAA,GAAWrY,EAASqY,EAAA,EAAQvR,eAGvB3B,OAAOyF,iBAAZ,CAGA,GAAMuM,IACJxC,QAAS,SACTpC,aACAiG,gBAAiB,MAInBxP,MAAKkO,KAAwClZ,EAAAK,EAAAia,EAAA,GAAOnB,EAAaD,GAEjElO,KAAKhJ,QAAUA,EAGfgJ,KAAKyP,aAAezP,KAAKyP,aAAa3O,KAAKd,KAE3C,IAAMmE,GAAW,IAAMnE,KAAKkO,KAAKsB,gBAAkB,KAGnDxP,MAAK0P,aACL1P,KAAKkO,KAAKvC,OAAOxT,QAAQ,SAACb,GACxByI,EAAK2P,UAAUpY,GAAStC,EAAAK,EAAA2C,EAAA,GAAS8S,SAAUxT,EAAO6M,EAC9CpE,EAAK0P,cAAeE,UAAU,EAAMC,YAAY,OjB+sExD,MAjCApQ,GAAa+P,IACX9T,IAAK,eACL/F,MAAO,SiBvqEI4B,EAAOO,GAClB,GAAMC,GAASkI,KAAKkO,KAAKsB,eAIzB,MAHe3X,EAAQgY,aAAa/X,EAAS,MAAMiX,MAAM,WAG9C1W,QAAQf,EAAMwY,MAAQ,GAAjC,CAGA,GAAMhZ,IAAiBiZ,UAAW,UAC5B9X,EAAkBjD,EAAAK,EAAAia,EAAA,GAAmBzX,EAASC,GAC9Cf,EAAa/B,EAAAK,EAAAia,EAAA,MAAWtP,KAAKkO,KAAK3E,UAAWtR,GAC7C+X,EAAU/X,EAAgB+X,SAAW,OAE3ChQ,MAAKhJ,QAAQ2C,KAAKqW,EAAShb,EAAAK,EAAAia,EAAA,GAAgBxY,EACvCC,EAAYiJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,UAAWS,EAASP,QjB8qE5DmE,IAAK,SACL/F,MAAO,WiBzqEA,GAAAgZ,GAAA1O,IACPjK,QAAOmC,KAAK8H,KAAK0P,WAAWvX,QAAQ,SAACsD,GACnCiT,EAAKgB,UAAUjU,GAAKkF,gBjBgrEjB4O,IiB1qETva,GAAAK,EAAA+Z,EAAA,GAAQ,eAAgBG,IjBirElB,SAAUna,EAAQwB,EAAqB5B,GAE7C,YAUA,SAASmS,GAAgBjM,EAAKO,EAAK/F,GAAiK,MAApJ+F,KAAOP,GAAOnF,OAAOC,eAAekF,EAAKO,GAAO/F,MAAOA,EAAOQ,YAAY,EAAMD,cAAc,EAAM2J,UAAU,IAAkB1E,EAAIO,GAAO/F,EAAgBwF,EAE3M,QAAS0D,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCkB9iEhH,QAASkR,KACP,GAAMC,GAAOpF,SAASqF,gBAChBhE,EAAOrB,SAASqB,IACtB,OAAOvQ,MAAKwU,IAAIF,EAAKG,aAAcH,EAAKI,aACpCnE,EAAKkE,aAAclE,EAAKmE,clB+hET,GAAItY,GAA0ChD,EAAoB,GAC9D4E,EAA8C5E,EAAoB,GAClEub,EAAyCvb,EAAoB,GAC7Dwb,EAAyCxb,EAAoB,GAC7Dyb,EAAuCzb,EAAoB,GAC3D0b,EAAuC1b,EAAoB,GAC3D2b,EAA2C3b,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MkB9vE1hB8R,ElBiyEiB,WkB3xErB,QAAAA,GAAY5Z,EAASkX,GAInB,GAJyBtP,EAAAoB,KAAA4Q,GACzB5b,EAAAK,EAAAqb,EAAA,GAAW1Z,EAAS0Z,EAAA,EAAQpS,oBAGvBnC,OAAOyF,iBAAZ,CAGA,GAAMuM,IACJ0C,kBAAmB,GACnBxF,eAAgBmF,EAAA,EAAQpL,gBAGxBmE,aAIFvJ,MAAKkO,KACDlZ,EAAAK,EAAAsb,EAAA,GAAOxC,EAAaD,GAExBlO,KAAKhJ,QAAUA,EACfgJ,KAAK8Q,SAAW9Q,KAAK+Q,cAGrB/Q,KAAKgR,aAAehc,EAAAK,EAAAsb,EAAA,GAAS3Q,KAAKgR,aAAalQ,KAAKd,MAAO,KAC3DA,KAAKiR,mBAAqBjR,KAAKiR,mBAAmBnQ,KAAKd,MAGvDA,KAAKiC,MAAQwO,EAAA,EAAM7K,YACf5O,EAAQb,IAAI,cAAe,8BAG/B6J,KAAKkR,QAAUV,EAAA,EAAQ5K,YACnB5O,EAASgJ,KAAKkO,KAAK7C,eAAgBrL,KAAKkO,KAAK/I,UAGjDvL,EAAA,EAAYK,IAAIjD,EAAS,MAAOgJ,KAAKiR,oBAErCjR,KAAKmR,6BlBs9EP,MA7KA3R,GAAaoR,IACXnV,IAAK,4BACL/F,MAAO,WkBlyEqBsK,KAAKoR,uCACP,KACxBjV,OAAOyF,iBAAiB,SAAU5B,KAAKgR,iBlB4yEzCvV,IAAK,mCACL/F,MAAO,WkBpyEPyG,OAAO6F,oBAAoB,SAAUhC,KAAKgR,iBlB+yE1CvV,IAAK,eACL/F,MAAO,WkBtyEP,GAAM2b,GAAapB,IACbqB,EAAYnV,OAAOoV,YACnBC,EAAerV,OAAOsV,YAGtBC,EAAmB9V,KAAK+V,IAAI,IAAK/V,KAAKwU,IAAI,EAC5CxU,KAAKgW,MAAaN,GAAaD,EAAaG,GAAjC,OAITK,EAAY7R,KAAKkR,QAAQpL,OAU/B,IATI+L,GAAa7R,KAAKiC,MAAM9L,MAAM0b,YAChC7R,KAAKiC,MAAM6P,QACX9R,KAAKiC,MAAMvK,KAAKma,eAOd7R,KAAKkR,QAAQvL,UAAU3F,KAAKiC,MAAM9L,MAAM0b,WAC1C7R,KAAKiC,MAAM6P,YACN,CACL,GAAMC,GAAsB/R,KAAKoR,sCAEjC,IAAIM,EAAmBK,EAAqB,CAClB,KAApBL,GAAkD,KAAvBK,GAC7B/R,KAAKgS,kCAEP,IAAMC,GAAiBP,EAAmBK,GAClB,KAApBL,GACAO,GAAkBjS,KAAKkO,KAAK2C,qBAC9B7Q,KAAKkS,qCAAqCR,GAC1C1R,KAAKmS,mBAAmBF,EAAgBP,SlBozE9CjW,IAAK,qBACL/F,MAAO,SkBxyEUsE,GAAgB,GAAA+F,GAAAC,IACjC,OAAO,UAAC1H,EAAO5C,GAKb,GAJAsE,EAAe1B,EAAO5C,IAGPV,EAAAK,EAAAsb,EAAA,GAASrY,GAASA,EAAlB6O,KAA4B7O,EAAQ5C,IACxC8Y,KAAM,CACf,GAAM4D,GAAerS,EAAK+Q,QAC1B/Q,GAAK+Q,SAAW/Q,EAAKgR,cAEjBhR,EAAK+Q,UAAYsB,GAInBrS,EAAKoR,iClBuzEX1V,IAAK,qBACL/F,MAAO,SkB7yEUuc,EAAgBP,GAEjC,GAAM5a,IACJiZ,UAAW,SACXvG,cAAe,aACfC,YAAa,WACb4I,WAAYJ,EACZvI,WAAYmB,OAAO6G,GACnB7H,gBAAgB,EAId7J,MAAKkO,KAAK5C,uBACZxU,EAAc,SAAWkJ,KAAKkO,KAAK5C,sBAAwB2G,GAG7DjS,KAAKhJ,QAAQ2C,KAAK,QACd3E,EAAAK,EAAAsb,EAAA,GAAgB7Z,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,elBozEhCqE,IAAK,uCACL/F,MAAO,SkB9yE4Bqc,GAAqB,GAAAO,EACxDtS,MAAKiC,MAAMvK,KAAX4a,KAAAnL,EAAAmL,EACGtS,KAAK8Q,SAAWiB,GADnB5K,EAAAmL,EAAA,YAEatS,KAAKkR,QAAQpL,SAF1BwM,OlByzEA7W,IAAK,uCACL/F,MAAO,WkB/yEP,MAAOsK,MAAKiC,MAAM9L,MAAM6J,KAAK8Q,WAAa,KlByzE1CrV,IAAK,cACL/F,MAAO,WkBlzEP,GAAMkZ,GAAM5Z,EAAAK,EAAA2C,EAAA,GACRgI,KAAKhJ,QAAQb,IAAI,SAAW6J,KAAKhJ,QAAQb,IAAI,YACjD,OAAOyY,GAAIC,SAAWD,EAAIK,UlB0zE1BxT,IAAK,SACL/F,MAAO,WkBpzEPsK,KAAKkR,QAAQvQ,UACbX,KAAKgS,mCACLpY,EAAA,EAAYC,OAAOmG,KAAKhJ,QAAS,MAAOgJ,KAAKiR,wBlByzExCL,IkBpzET5b,GAAAK,EAAAkb,EAAA,GAAQ,mBAAoBK,IlBq0EtB,SAAUxb,EAAQwB,EAAqB5B,GAE7C,YAOA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCmBx4EhH,QAASwT,GAAa7G,GACpB,MAAO8G,GAAS9G,KAAW8G,EAAS9G,GAASvP,OAAOsW,WAAW/G,InBi4E5C,GAAInP,GAA2CvH,EAAoB,GAC/Doa,EAAyCpa,EAAoB,GAC7Dqa,EAAuCra,EAAoB,GAC3Dsa,EAA2Cta,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MmB5hF1hB0T,KAOAE,EnBwjFkB,WmBljFtB,QAAAA,GAAY1b,EAASkX,GAInB,GAJyBtP,EAAAoB,KAAA0S,GACzB1d,EAAAK,EAAAga,EAAA,GAAWrY,EAASqY,EAAA,EAAQrR,qBAGvB7B,OAAOsW,WAAZ,CAGA,GAAMtE,IAEJwE,eAAgB3S,KAAK2S,eACrBC,cAAe,IACfrJ,aAIFvJ,MAAKkO,KACDlZ,EAAAK,EAAAia,EAAA,GAAOnB,EAAaD,GAGnBlZ,EAAAK,EAAAia,EAAA,GAAStP,KAAKkO,KAAK3C,eAExBvL,KAAKkO,KAAK3C,YAAcvW,EAAAK,EAAAia,EAAA,GAAQtP,KAAKkO,KAAK3C,aAC1CvL,KAAKhJ,QAAUA,EACfgJ,KAAK6S,mBAEL7S,KAAK8S,wBnBqrFP,MAnHAtT,GAAakT,IACXjX,IAAK,sBACL/F,MAAO,WmB7jFa,GAAAqK,GAAAC,IACpBA,MAAKkO,KAAK3C,YAAYpT,QAAQ,SAAC4T,GAE7B,GAAIA,EAAWnW,MAAQmW,EAAWP,eAAgB,CAChD,GAAMuH,GAAYhT,EAAKiT,aAAajH,EACpChM,GAAK/I,QAAQU,IAAI,YAAcqU,EAAWP,eAAgBuH,GAE1DhT,EAAKkT,mBAAmBlH,SnB6kF5BtQ,IAAK,eACL/F,MAAO,SmBlkFIqW,GACX,GAAI3R,SAOJ,OALA2R,GAAWN,MAAMtT,QAAQ,SAAC+L,GACpBqO,EAAarO,EAAKwH,OAAO3H,UAC3B3J,EAAQ8J,KAGL9J,EAAQA,EAAMxE,KAAO2G,EAAA,KnB6kF5Bd,IAAK,qBACL/F,MAAO,SmBrkFUqW,GAAY,GAAA2C,GAAA1O,IAC7B+L,GAAWN,MAAMtT,QAAQ,SAAC+L,GACxB,GAAMgP,GAAMX,EAAarO,EAAKwH,OACxBhT,EAAK1D,EAAAK,EAAAia,EAAA,GAAS,WAClBZ,EAAKyE,cAAcpH,IAClB2C,EAAKR,KAAK0E,cAEbM,GAAIE,YAAY1a,GAChBgW,EAAKmE,gBAAgB9Y,MAAMmZ,MAAKxa,YnBmlFlC+C,IAAK,gBACL/F,MAAO,SmB1kFKqW,GACZ,GAAMxJ,GAAWvC,KAAKgT,aAAajH,GAC7B1J,EAAWrC,KAAKhJ,QAAQb,IAAI,YAAc4V,EAAWP,eAE3D,IAAIjJ,IAAaF,EAAU,CACzBrC,KAAKhJ,QAAQU,IAAI,YAAcqU,EAAWP,eAAgBjJ,EAG1D,IAAMzL,IACJiZ,UAAW,SACXvG,cAAeuC,EAAWnW,KAC1B6T,YAAa,SACbC,WAAY1J,KAAKkO,KAAKyE,eAAetQ,EAAUE,GAC/CsH,gBAAgB,EAElB7J,MAAKhJ,QAAQ2C,KAAK,QAAS3E,EAAAK,EAAAia,EAAA,GAAgBxY,EACvCkJ,KAAKkO,KAAK3E,UAAWvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,gBnBklFnDqE,IAAK,SACL/F,MAAO,WmB3kFP,IAAK,GAAW2d,GAAPhe,EAAI,EAAage,EAAWrT,KAAK6S,gBAAgBxd,GAAIA,IAC5Dge,EAASH,IAAII,eAAeD,EAAS3a,OnBylFvC+C,IAAK,iBACL/F,MAAO,SmB/kFM2M,EAAUE,GACvB,MAAOF,GAAW,OAASE,MnBmlFtBmQ,ImB9kFT1d,GAAAK,EAAA+Z,EAAA,GAAQ,oBAAqBsD,InB+lFvB,SAAUtd,EAAQwB,EAAqB5B,GAE7C,YAOA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCoBtnFhH,QAASwU,GAA+Bjc,EAAOkc,GAC7C,QAEkB,SAAdlc,EAAMwY,MAES,UAAf0D,EAAKnc,QAGLC,EAAMmc,SAAWnc,EAAMoc,SAGvBpc,EAAMqc,UAENrc,EAAMsc,QAINtc,EAAMuc,MAAQ,GpB+lFC,GAAI7b,GAA0ChD,EAAoB,GAC9Doa,EAAyCpa,EAAoB,GAC7Dqa,EAAuCra,EAAoB,GAC3Dsa,EAA2Cta,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MoBlvF1hBgV,EpBgxFoB,WoB1wFxB,QAAAA,GAAY9c,EAASkX,GAAM,GAAAnO,GAAAC,IAIzB,IAJyBpB,EAAAoB,KAAA8T,GACzB9e,EAAAK,EAAAga,EAAA,GAAWrY,EAASqY,EAAA,EAAQnR,uBAGvB/B,OAAOyF,iBAAZ,CAGA,GAAMuM,IACJxC,QAAS,SACToI,aAAc,UACdC,wBAAyBhU,KAAKgU,wBAC9BzK,aACAiG,gBAAiB,MAInBxP,MAAKkO,KACDlZ,EAAAK,EAAAia,EAAA,GAAOnB,EAAaD,GAExBlO,KAAKhJ,QAAUA,EAGfgJ,KAAKiU,uBAAyBjU,KAAKiU,uBAAuBnT,KAAKd,MAG/DA,KAAK0P,aACL1P,KAAKkO,KAAKvC,OAAOxT,QAAQ,SAACb,GACxByI,EAAK2P,UAAUpY,GAAStC,EAAAK,EAAA2C,EAAA,GAAS8S,SAAUxT,EAAOyI,EAAKmO,KAAK6F,aACxDhU,EAAKkU,wBAAyBtE,UAAU,EAAMC,YAAY,OpBw2FlE,MAxEApQ,GAAasU,IACXrY,IAAK,yBACL/F,MAAO,SoBtxFc4B,EAAOkc,GAC5B,GAAIxT,KAAKkO,KAAK8F,wBAAwBR,EAAMxb,EAAA,GAAW,CACrD,GAAMkc,GAAOV,EAAK3D,aAAa,SAAW2D,EAAK3D,aAAa,cACtDjB,EAAM5Z,EAAAK,EAAA2C,EAAA,GAASkc,GAGfpd,GACJiZ,UAAW,SACXvG,cAAe,gBACfC,YAAanS,EAAMwY,KACnBpG,WAAYkF,EAAIsF,OAGbC,UAAUC,YACXb,EAA+Bjc,EAAOkc,IAGxCrX,OAAOyF,iBAAiB,QAAS,SAAStK,GAGnCA,EAAM+c,mBAGT/c,EAAMgd,iBACNxd,EAAcyd,YAAcvf,EAAAK,EAAAia,EAAA,GAAY,WACtCf,SAAS2F,KAAOA,MAOxB,IAAMnd,GAAa/B,EAAAK,EAAAia,EAAA,MAAWtP,KAAKkO,KAAK3E,UACpCvU,EAAAK,EAAAia,EAAA,GAAmBkE,EAAMxT,KAAKkO,KAAKsB,iBAEvCxP,MAAKhJ,QAAQ2C,KAAK,QACd3E,EAAAK,EAAAia,EAAA,GAAgBxY,EAAeC,EAC3BiJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,UAAWoc,EAAMlc,QpBiyFnDmE,IAAK,0BACL/F,MAAO,SoBrxFe8d,EAAMgB,GAC5B,GAAMN,GAAOV,EAAK3D,aAAa,SAAW2D,EAAK3D,aAAa,cACtDjB,EAAM4F,EAAWN,EACvB,OAAOtF,GAAI6F,UAAYlG,SAASkG,UACA,QAA5B7F,EAAI8F,SAASlc,MAAM,EAAG,MpB4xF1BiD,IAAK,SACL/F,MAAO,WoBvxFA,GAAAgZ,GAAA1O,IACPjK,QAAOmC,KAAK8H,KAAK0P,WAAWvX,QAAQ,SAACsD,GACnCiT,EAAKgB,UAAUjU,GAAKkF,gBpB8xFjBmT,IoBxxFT9e,GAAAK,EAAA+Z,EAAA,GAAQ,sBAAuB0E,IpB4zFzB,SAAU1e,EAAQwB,EAAqB5B,GAE7C,YAUA,SAASmS,GAAgBjM,EAAKO,EAAK/F,GAAiK,MAApJ+F,KAAOP,GAAOnF,OAAOC,eAAekF,EAAKO,GAAO/F,MAAOA,EAAOQ,YAAY,EAAMD,cAAc,EAAM2J,UAAU,IAAkB1E,EAAIO,GAAO/F,EAAgBwF,EAE3M,QAAS0D,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAX3F,GAAIxC,GAA2CvH,EAAoB,GAC/D4E,EAA8C5E,EAAoB,GAClEub,EAAyCvb,EAAoB,GAC7Dwb,EAAyCxb,EAAoB,GAC7Dyb,EAAuCzb,EAAoB,GAC3D0b,EAAuC1b,EAAoB,GAC3D2b,EAA2C3b,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MqBx7F1hB6V,EAAU,UACVC,EAAU5f,EAAAK,EAAAsb,EAAA,KACVkE,EAAU,IAOVC,ErBu9FsB,WqBj9F1B,QAAAA,GAAY9d,EAASkX,GAAM,GAAAnO,GAAAC,IAIzB,IAJyBpB,EAAAoB,KAAA8U,GACzB9f,EAAAK,EAAAqb,EAAA,GAAW1Z,EAAS0Z,EAAA,EAAQvS,yBAGvB2M,SAASC,gBAAd,CAGA,GAAMoD,IACJ9C,eAAgBmF,EAAA,EAAQpL,gBACxB2P,iBAAkB,EAAIF,EAEtBjJ,qBAAqB,EAGrBrC,aAIFvJ,MAAKkO,KACDlZ,EAAAK,EAAAsb,EAAA,GAAOxC,EAAaD,GAExBlO,KAAKhJ,QAAUA,EACfgJ,KAAKgV,cAAgBlK,SAASC,gBAC9B/K,KAAKiV,yBAA2B,KAChCjV,KAAKkV,wBAAyB,EAG9BlV,KAAKiR,mBAAqBjR,KAAKiR,mBAAmBnQ,KAAKd,MACvDA,KAAKmV,aAAenV,KAAKmV,aAAarU,KAAKd,MAC3CA,KAAKoV,mBAAqBpV,KAAKoV,mBAAmBtU,KAAKd,MACvDA,KAAKqV,uBAAyBrV,KAAKqV,uBAAuBvU,KAAKd,MAG/DA,KAAKiC,MAAQwO,EAAA,EAAM7K,YACf5O,EAAQb,IAAI,cAAe,mCAC/B6J,KAAKiC,MAAMqT,GAAG,cAAetV,KAAKqV,wBAGlCrV,KAAKkR,QAAUV,EAAA,EAAQ5K,YACnB5O,EAASgJ,KAAKkO,KAAK7C,eAAgBrL,KAAKkO,KAAK/I,UAGjDvL,EAAA,EAAYK,IAAIjD,EAAS,MAAOgJ,KAAKiR,oBAErC9U,OAAOyF,iBAAiB,SAAU5B,KAAKoV,oBACvCtK,SAASlJ,iBAAiB,mBAAoB5B,KAAKmV,cAInDngB,EAAAK,EAAAsb,EAAA,GAAwB3Q,KAAKhJ,QAAS,WAChC8T,SAASC,iBAAmB4J,GAC1B5U,EAAKmO,KAAKtC,sBACZ7L,EAAKwV,cAAcC,YAAY,IAC/BzV,EAAKmV,wBAAyB,GAEhCnV,EAAKkC,MAAMvK,KACT+d,KAAMzgB,EAAAK,EAAAsb,EAAA,KACN+E,MAAOf,EACPgB,OAAQf,EACR/C,UAAW9R,EAAKmR,QAAQpL,WAGtB/F,EAAKmO,KAAKtC,qBAAuB7L,EAAKmO,KAAKrC,sBAC7C9L,EAAK6V,kBrB6wGb,MAnSApW,GAAasV,IACXrZ,IAAK,eACL/F,MAAO,WqB59FM,GAAAgZ,GAAA1O,IACb,IAAM8K,SAASC,iBAAmB4J,GAhGvB,UAiGP7J,SAASC,gBADb,CAKA,GAAM8K,GAAmB7V,KAAK8V,2BAGxBC,GACJN,KAAMzgB,EAAAK,EAAAsb,EAAA,KACN+E,MAAO5K,SAASC,gBAChB4K,OAAQf,EACR/C,UAAW7R,KAAKkR,QAAQpL,QAMtBgF,UAASC,iBAAmB4J,GAC5B3U,KAAKkO,KAAKtC,sBAAwB5L,KAAKkV,yBACzClV,KAAKuV,eACLvV,KAAKkV,wBAAyB,GArHrB,UA0HPpK,SAASC,iBAA6B/K,KAAKiV,0BAC7Chc,aAAa+G,KAAKiV,0BAGhBjV,KAAKkR,QAAQvL,UAAUkQ,EAAiBhE,YAC1C7R,KAAKiC,MAAM6P,QA/HF,UAgIL9R,KAAKgV,eACLlK,SAASC,iBAAmB4J,IAY9B1b,aAAa+G,KAAKiV,0BAClBjV,KAAKiV,yBAA2B/b,WAAW,WACzCwV,EAAKzM,MAAMvK,IAAIqe,GACfrH,EAAK6G,cAAc7P,QAASqQ,EAAON,QAClCzV,KAAKkO,KAAK6G,qBAGXc,EAAiBF,QAAUf,GAC3BiB,EAAiBH,OAASf,GAC5B3U,KAAKgW,wBAAwBH,GAE/B7V,KAAKiC,MAAMvK,IAAIqe,IAGjB/V,KAAKgV,cAAgBlK,SAASC,oBrB++F9BtP,IAAK,2BACL/F,MAAO,WqB59FP,GAAMmgB,GACsC7V,KAAKiC,MAAM9L,KASvD,OAPI6J,MAAKgV,eAAiBL,GAlLf,UAmLPkB,EAAiBH,OACjBG,EAAiBF,QAAUf,IAC7BiB,EAAiBH,MAAQf,EACzBkB,EAAiBF,OAASf,EAC1B5U,KAAKiC,MAAMvK,IAAIme,IAEVA,KrBy+FPpa,IAAK,0BACL/F,MAAO,SqB99FemgB,GAAkC,GAAAI,GAAAhf,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAAfyO,EAAeuQ,EAAfvQ,QACnCwQ,EAAQlW,KAAKmW,6BACfN,GAAmBnQ,WAGvB,IAAIwQ,GAASA,GAASlW,KAAKkO,KAAK6G,iBAAkB,CAChD,GAAMqB,GAAiBxa,KAAKgW,MAAMsE,EAAQrB,GAGpC/d,GACJiZ,UAAW,SACXlG,gBAAgB,EAChBL,cAAe,kBACfC,YAAa,QACb4I,WAAY+D,EACZ1M,WAAYnN,EAAA,EAGVmJ,KACF5O,EAAcuf,UAAYrhB,EAAAK,EAAAsb,EAAA,KAAQjL,GAIhC1F,KAAKkO,KAAKpC,qBACZhV,EAAc,SAAWkJ,KAAKkO,KAAKpC,oBAAsBsK,GAG3DpW,KAAKhJ,QAAQ2C,KAAK,QACd3E,EAAAK,EAAAsb,EAAA,GAAgB7Z,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,gBrBu+FlCqE,IAAK,eACL/F,MAAO,WqBj+FM,GAAA4gB,GAEPxf,MACJiZ,UAAW,SACXvG,cAAe,kBACfC,YAAa,YACbC,WAAYnN,EAAA,GAJR4K,EAAAmP,EAKH,SAAWtW,KAAKkO,KAAKrC,qBAAuB,GALzC1E,EAAAmP,EAAA,kBAMY,GANZA,EAQNtW,MAAKhJ,QAAQ2C,KAAK,QACd3E,EAAAK,EAAAsb,EAAA,GAAgB7Z,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,erB6+FhCqE,IAAK,eACL/F,MAAO,WqBl+FgC,GAAA6gB,GAAAtf,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAA3ByO,EAA2B6Q,EAA3B7Q,QAAS8P,EAAkBe,EAAlBf,WAEf1e,GAAiBiZ,UAAW,SAC9BrK,KACF5O,EAAcuf,UAAYrhB,EAAAK,EAAAsb,EAAA,KAAQjL,GAEhC8P,GAAcxV,KAAKkO,KAAKrC,uBAC1B/U,EAAc,SAAWkJ,KAAKkO,KAAKrC,sBAAwB,GAG7D7L,KAAKhJ,QAAQ2C,KAAK,WACd3E,EAAAK,EAAAsb,EAAA,GAAgB7Z,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,erBg/FhCqE,IAAK,qBACL/F,MAAO,SqBv+FUsE,GAAgB,GAAAwc,GAAAxW,IACjC,OAAO,UAAC1H,EAAO5C,GAEb,GAAM+gB,GAASzhB,EAAAK,EAAAsb,EAAA,GAASrY,GAASA,EAAlB6O,KAA4B7O,EAAQ5C,EAC/C+gB,GAAOjI,MAAQiI,EAAOjI,OAASgI,EAAKxf,QAAQb,IAAI,SAC9CqgB,EAAKxB,eAAiBL,GACxB6B,EAAKrB,eAGTnb,EAAe1B,EAAO5C,OrBu/FxB+F,IAAK,+BACL/F,MAAO,SqB5+FoBmgB,GAAkC,GAAAa,GAAAzf,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAAfyO,EAAegR,EAAfhR,OAC9C,OAAOmQ,GAAiBJ,MACnB/P,GAAW1Q,EAAAK,EAAAsb,EAAA,MAASkF,EAAiBJ,KAAO,KrB4/FjDha,IAAK,yBACL/F,MAAO,SqBj/Fc4M,EAASJ,GAI1BI,EAAQmT,MAAQvT,EAAQuT,OAOxBvT,EAAQyT,QAAUf,GAClB1S,EAAQwT,OAASf,GAChB3U,KAAKkR,QAAQvL,UAAUzD,EAAQ2P,YAClC7R,KAAKgW,wBAAwB9T,GAAUwD,QAASpD,EAAQmT,WrB2/F1Dha,IAAK,qBACL/F,MAAO,WqBp0GI,UAsVPsK,KAAKgV,eACPhV,KAAKmV,kBrB2/FP1Z,IAAK,SACL/F,MAAO,WqBp/FPsK,KAAKiC,MAAMtB,UACXX,KAAKkR,QAAQvQ,UACb/G,EAAA,EAAYC,OAAOmG,KAAKhJ,QAAS,MAAOgJ,KAAKiR,oBAC7C9U,OAAO6F,oBAAoB,SAAUhC,KAAKoV,oBAC1CtK,SAAS9I,oBAAoB,mBAAoBhC,KAAKmV,kBrBy/FjDL,IqBp/FT9f,GAAAK,EAAAkb,EAAA,GAAQ,wBAAyBuE,IrB2/F3B,SAAU1f,EAAQwB,EAAqB5B,GAE7C,YAMA,SAAS4J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAL3F,GAAI4X,GAAyC3hB,EAAoB,GAC7D4hB,EAAuC5hB,EAAoB,GAC3DiQ,EAA2CjQ,EAAoB,GACpFwK,EAAe,WAAc,QAASC,GAAiBpI,EAAQqI,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMxI,OAAQ7B,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAIsK,GAAWzJ,WAAayJ,EAAWzJ,aAAc,EAAOyJ,EAAW1J,cAAe,EAAU,SAAW0J,KAAYA,EAAWC,UAAW,GAAM7J,OAAOC,eAAeqB,EAAQsI,EAAWlE,IAAKkE,IAAiB,MAAO,UAAUb,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBX,EAAYtI,UAAWqJ,GAAiBC,GAAaL,EAAiBX,EAAagB,GAAqBhB,MsB12G1hB+X,EtBu4GoB,WsB/3GxB,QAAAA,GAAY7f,EAASkX,GAInB,GAJyBtP,EAAAoB,KAAA6W,GACzB7hB,EAAAK,EAAAuhB,EAAA,GAAW5f,EAAS4f,EAAA,EAAQxY,uBAGvBjC,OAAOyF,iBAAZ,CAGA,GAAMuM,IACJ5E,aACAnS,UAAW,KAGb4I,MAAKkO,KACDlZ,EAAAK,EAAA4P,EAAA,GAAOkJ,EAAaD,GAExBlO,KAAKhJ,QAAUA,EAGfgJ,KAAK8W,mBAAqB9W,KAAK8W,mBAAmBhW,KAAKd,MACvDA,KAAK+W,wBAA0B/W,KAAK+W,wBAAwBjW,KAAKd,MACjEA,KAAKgX,kBAAoBhX,KAAKgX,kBAAkBlW,KAAKd,MACrDA,KAAKiX,mBAAqBjX,KAAKiX,mBAAmBnW,KAAKd,MACvDA,KAAKkX,iBAAmBlX,KAAKkX,iBAAiBpW,KAAKd,MACnDA,KAAKmX,mBAAqBnX,KAAKmX,mBAAmBrW,KAAKd,MAE5B,YAAvB8K,SAASsM,WAKXjb,OAAOyF,iBAAiB,OAAQ5B,KAAK8W,oBAErC9W,KAAK8W,sBtBikHT,MA/KAtX,GAAaqX,IACXpb,IAAK,qBACL/F,MAAO,WsB14GHyG,OAAOkb,IAAIrX,KAAKsX,2BAChBnb,OAAOob,OAAOvX,KAAK+W,6BtBq5GvBtb,IAAK,0BACL/F,MAAO,WsB94GiB,GAAAqK,GAAAC,IACxB,KACE7D,OAAOob,MAAMC,MAAM,WACjBrb,OAAOob,MAAM5L,OAAO7K,KAAK,QAASf,EAAKiX,mBACvC7a,OAAOob,MAAM5L,OAAO7K,KAAK,SAAUf,EAAKkX,sBAE1C,MAAMrU,QtB25GRnH,IAAK,6BACL/F,MAAO,WsBn5GoB,GAAAgZ,GAAA1O,IAC3B,KACE7D,OAAOob,MAAMC,MAAM,WACjBrb,OAAOob,MAAM5L,OAAO8L,OAAO,QAAS/I,EAAKsI,mBACzC7a,OAAOob,MAAM5L,OAAO8L,OAAO,SAAU/I,EAAKuI,sBAE5C,MAAMrU,QtBg6GRnH,IAAK,2BACL/F,MAAO,WsBv5GP,IACEyG,OAAOkb,GAAGK,MAAMC,UAAU,cAAe3X,KAAKkX,kBAC9C/a,OAAOkb,GAAGK,MAAMC,UAAU,cAAe3X,KAAKmX,oBAC9C,MAAMvU,QtBm6GRnH,IAAK,8BACL/F,MAAO,WsB15GP,IACEyG,OAAOkb,GAAGK,MAAME,YAAY,cAAe5X,KAAKkX,kBAChD/a,OAAOkb,GAAGK,MAAME,YAAY,cAAe5X,KAAKmX,oBAChD,MAAMvU,QtBs6GRnH,IAAK,oBACL/F,MAAO,SsB95GS4B,GAEhB,GAAoB,SAAhBA,EAAMugB,OAAV,CAEA,GAAMjJ,GAAMtX,EAAMoL,KAAKkM,KAAOtX,EAAMD,OAAOwY,aAAa,aACpDtB,SAAS2F,KAGPpd,GACJiZ,UAAW,SACX+H,cAAe,UACfC,aAAc,QACdC,aAAcpJ,EAEhB5O,MAAKhJ,QAAQ2C,KAAK,SACd3E,EAAAK,EAAA4P,EAAA,GAAgBnO,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,UAAWE,EAAMD,OAAQC,QtBo6GzDmE,IAAK,qBACL/F,MAAO,SsB95GU4B,GAEjB,GAAoB,UAAhBA,EAAMugB,OAAV,CAEA,GAAMI,GAAa3gB,EAAMoL,KAAKwV,aAC1B5gB,EAAMD,OAAOwY,aAAa,oBAGxB/Y,GACJiZ,UAAW,SACX+H,cAAe,UACfC,aAAc,SACdC,aAAcC,EAEhBjY,MAAKhJ,QAAQ2C,KAAK,SACd3E,EAAAK,EAAA4P,EAAA,GAAgBnO,EAAekJ,KAAKkO,KAAK3E,UACrCvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,UAAWE,EAAMD,OAAQC,QtBo6GzDmE,IAAK,mBACL/F,MAAO,SsB95GQkZ,GAEf,GAAM9X,IACJiZ,UAAW,SACX+H,cAAe,WACfC,aAAc,OACdC,aAAcpJ,EAEhB5O,MAAKhJ,QAAQ2C,KAAK,SAAU3E,EAAAK,EAAA4P,EAAA,GAAgBnO,EACxCkJ,KAAKkO,KAAK3E,UAAWvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,etBs6GjDqE,IAAK,qBACL/F,MAAO,SsBh6GUkZ,GAEjB,GAAM9X,IACJiZ,UAAW,SACX+H,cAAe,WACfC,aAAc,SACdC,aAAcpJ,EAEhB5O,MAAKhJ,QAAQ2C,KAAK,SAAU3E,EAAAK,EAAA4P,EAAA,GAAgBnO,EACxCkJ,KAAKkO,KAAK3E,UAAWvJ,KAAKhJ,QAASgJ,KAAKkO,KAAK9W,etBu6GjDqE,IAAK,SACL/F,MAAO,WsBj6GPyG,OAAO6F,oBAAoB,OAAQhC,KAAK8W,oBACxC9W,KAAKmY,8BACLnY,KAAKoY,iCtBs6GAvB,IsBj6GT7hB,GAAAK,EAAAshB,EAAA,GAAQ,sBAAuBE,ItBw6GzB,SAAUzhB,EAAQwB,EAAqB5B,GAE7C,YuB7nHe,SAASqjB,GACpBC,EAAUC,EAAWpU,EAAU/K,GAAqB,GAAX8U,GAAWjX,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,MAEhDoc,EAAW,SAAS/b,GACxB,GAAIkhB,SAIJ,IAAItK,EAAKyB,UAAyC,kBAAtBrY,GAAMmhB,aAEhC,IAAK,GAAWpU,GADVoU,EAAenhB,EAAMmhB,eAClBpjB,EAAI,EAASgP,EAAOoU,EAAapjB,GAAIA,IACvB,GAAjBgP,EAAKL,UAAiBhP,EAAAK,EAAAqjB,EAAA,GAAQrU,EAAMF,KACtCqU,EAAiBnU,OAKrBmU,GAAiBxjB,EAAAK,EAAAsjB,EAAA,GAAQrhB,EAAMD,OAAQ8M,GAAU,EAG/CqU,IACFpf,EAAS7D,KAAKijB,EAAgBlhB,EAAOkhB,GAMzC,OAFAF,GAAS1W,iBAAiB2W,EAAWlF,EAAUnF,EAAK0B,aAGlDjP,QAAS,WACP2X,EAAStW,oBAAoBuW,EAAWlF,EAAUnF,EAAK0B,cvBimH5BhZ,EAAuB,EAAIyhB,CACvC,IAAIM,GAAyC3jB,EAAoB,GAC7D0jB,EAAyC1jB,EAAoB,IAqDhF,SAAUI,EAAQwB,EAAqB5B,GAE7C,YAEgC,mBAAXgG,SAAgCA,OAAOC,UAmDtD,SAAU7F,EAAQwB,EAAqB5B,GAE7C,YwBtvHe,SAAS4jB,GAAc/gB,GACpC,GAAMghB,KAGN,KAAMhhB,GAA+B,GAApBA,EAAQmM,SAAgB,MAAO6U,EAGhD,IAAMC,GAAMjhB,EAAQE,UACpB,IAAmB,IAAf+gB,EAAI5hB,OAAc,QAEtB,KAAK,GAAW6hB,GAAP1jB,EAAI,EAAS0jB,EAAOD,EAAIzjB,GAAIA,IACnCwjB,EAAME,EAAKnjB,MAAQmjB,EAAKrjB,KAE1B,OAAOmjB,GApBTjiB,EAAA,EAAAgiB,GxBwxHM,SAAUxjB,EAAQwB,EAAqB5B,GAE7C,YyB5wHe,SAASgkB,GAASpK,GAI/B,GAFAA,EAAQA,GAAc,KAAPA,EAA8BA,EAAhBL,SAAS2F,KAElC+E,EAAMrK,GAAM,MAAOqK,GAAMrK,EAW7B,IATAjT,EAAEuY,KAAOtF,EASY,KAAjBA,EAAIpU,OAAO,IAA8B,KAAjBoU,EAAIpU,OAAO,GAAW,MAAOwe,GAASrd,EAAEuY,KAGpE,IAAIgF,GAAQvd,EAAEud,MAAQC,GAAaxd,EAAEud,MAAQE,EAAc,GAAKzd,EAAEud,IAGlEA,GAAe,KAARA,EAAc,GAAKA,CAK1B,IAAMG,GAAO1d,EAAE0d,KAAKlf,QAAQmf,EAAc,IAGpCC,EAAS5d,EAAE4d,OAAS5d,EAAE4d,OAAS5d,EAAE+Y,SAAW,KAAO2E,EAInDxK,EAAmC,KAAxBlT,EAAEkT,SAASrU,OAAO,GAAYmB,EAAEkT,SAAW,IAAMlT,EAAEkT,QAEpE,OAAOoK,GAAMrK,IACX4K,KAAM7d,EAAE6d,KACRH,KAAMA,EACN5E,SAAU9Y,EAAE8Y,SACZP,KAAMvY,EAAEuY,KACRqF,OAAQA,EACR1K,SAAUA,EACVqK,KAAMA,EACNxE,SAAU/Y,EAAE+Y,SACZzF,OAAQtT,EAAEsT,QA1DdrY,EAAA,EAAAoiB,CAAA,IAAMG,GAAY,KACZC,EAAa,MACbE,EAAeG,OAAO,KAAON,EAAY,IAAMC,EAAa,MAG5Dzd,EAAImP,SAAS0B,cAAc,KAC3ByM","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/solved-by-flexbox/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createFieldsObj;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = getAttributeFields;\n/* unused harmony export domReady */\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = debounce;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = withTimeout;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = deferUntilPluginsLoaded;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return assign; });\n/* unused harmony export camelCase */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = capitalize;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = isObject;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = toArray;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = now;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return uuid; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(4);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nfunction createFieldsObj(defaultFields, userFields) {\n  var tracker = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var hitFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var target = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  var event = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n\n  if (typeof hitFilter == 'function') {\n    var originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: function buildHitTask( /** @type {!Model} */model) {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      }\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nfunction getAttributeFields(element, prefix) {\n  var attributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"a\" /* getAttributes */])(element);\n  var attributeFields = {};\n\n  Object.keys(attributes).forEach(function (attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      var value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      var field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nfunction domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nfunction debounce(fn, wait) {\n  var timeout = void 0;\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return fn.apply(undefined, args);\n    }, wait);\n  };\n}\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nfunction withTimeout(callback) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n\n  var called = false;\n  var fn = function fn() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nvar queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nfunction deferUntilPluginsLoaded(tracker, fn) {\n  var trackingId = tracker.get('trackingId');\n  var ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  var processQueue = function processQueue() {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach(function (fn) {\n      return fn();\n    });\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = function (originalMethod) {\n      return function () {\n        processQueue();\n        originalMethod.apply(undefined, arguments);\n      };\n    };\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'send', ref.send);\n  }\n}\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nvar assign = Object.assign || function (target) {\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  for (var i = 0, len = sources.length; i < len; i++) {\n    var source = Object(sources[i]);\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nfunction camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function (match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && value !== null;\n}\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @return {number} The current date timestamp\n */\nfunction now() {\n  return +new Date();\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n/*eslint-enable */\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = provide;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(0);\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nfunction provide(pluginName, pluginConstructor) {\n  var gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]) < 0) {\n    window.gaDevIds.push(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"c\" /* capitalize */])(pluginName)] = pluginConstructor;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return plugins; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = trackUsage;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(3);\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10\n};\n\nvar PLUGIN_COUNT = Object.keys(plugins).length;\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nfunction trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */]);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */], convertBinToHex(usageBin));\n}\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"c\" /* VERSION_PARAM */], __WEBPACK_IMPORTED_MODULE_0__constants__[\"d\" /* VERSION */]);\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DEV_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return VERSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return USAGE_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return NULL_DIMENSION; });\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar VERSION = '2.3.3';\nvar DEV_ID = 'i5iSjo';\n\nvar VERSION_PARAM = '_av';\nvar USAGE_PARAM = '_au';\n\nvar NULL_DIMENSION = '(not set)';\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\nvar instances = [];\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\n\nvar MethodChain = function () {\n  _createClass(MethodChain, null, [{\n    key: \"add\",\n\n    /**\n     * Adds the passed override method to the list of method chain overrides.\n     * @param {!Object} context The object containing the method to chain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to add.\n     */\n    value: function add(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).add(methodOverride);\n    }\n\n    /**\n     * Removes a method chain added via `add()`. If the override is the\n     * only override added, the original method is restored.\n     * @param {!Object} context The object containing the method to unchain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).remove(methodOverride);\n    }\n\n    /**\n     * Wraps a foreign object method and overrides it. Also stores a reference\n     * to the original method so it can be restored later.\n     * @param {!Object} context The object containing the method.\n     * @param {string} methodName The name of the method on the object.\n     */\n\n  }]);\n\n  function MethodChain(context, methodName) {\n    var _this = this;\n\n    _classCallCheck(this, MethodChain);\n\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ? context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = function () {\n      var lastBoundMethod = _this.boundMethodChain[_this.boundMethodChain.length - 1];\n\n      return lastBoundMethod.apply(undefined, arguments);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n\n\n  _createClass(MethodChain, [{\n    key: \"add\",\n    value: function add(overrideMethod) {\n      this.methodChain.push(overrideMethod);\n      this.rebindMethodChain();\n    }\n\n    /**\n     * Removes a method from the method chain and restores the prior order.\n     * @param {!Function} overrideMethod The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(overrideMethod) {\n      var index = this.methodChain.indexOf(overrideMethod);\n      if (index > -1) {\n        this.methodChain.splice(index, 1);\n        if (this.methodChain.length > 0) {\n          this.rebindMethodChain();\n        } else {\n          this.destroy();\n        }\n      }\n    }\n\n    /**\n     * Loops through the method chain array and recreates the bound method\n     * chain array. This is necessary any time a method is added or removed\n     * to ensure proper original method context and order.\n     */\n\n  }, {\n    key: \"rebindMethodChain\",\n    value: function rebindMethodChain() {\n      this.boundMethodChain = [];\n      for (var method, i = 0; method = this.methodChain[i]; i++) {\n        var previousMethod = this.boundMethodChain[i - 1] || this.originalMethodReference.bind(this.context);\n        this.boundMethodChain.push(method(previousMethod));\n      }\n    }\n\n    /**\n     * Calls super and destroys the instance if no registered handlers remain.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var index = instances.indexOf(this);\n      if (index > -1) {\n        instances.splice(index, 1);\n        if (this.isTask) {\n          this.context.set(this.methodName, this.originalMethodReference);\n        } else {\n          this.context[this.methodName] = this.originalMethodReference;\n        }\n      }\n    }\n  }]);\n\n  return MethodChain;\n}();\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MethodChain);\nfunction getOrCreateMethodChain(context, methodName) {\n  var methodChain = instances.filter(function (h) {\n    return h.context == context && h.methodName == methodName;\n  })[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_closest__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_delegate__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_dispatch__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_matches__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_parents__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__ = __webpack_require__(25);\n/* unused harmony reexport closest */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib_delegate__[\"a\"]; });\n/* unused harmony reexport dispatch */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__[\"a\"]; });\n/* unused harmony reexport matches */\n/* unused harmony reexport parents */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_emitter__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar AUTOTRACK_PREFIX = 'autotrack';\nvar instances = {};\nvar isListening = false;\n\n/** @type {boolean|undefined} */\nvar browserSupportsLocalStorage = void 0;\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\n\nvar Store = function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  _createClass(Store, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguements or creates a new\n     * instance if one doesn't exist.\n     * @param {string} trackingId The tracking ID for the GA property.\n     * @param {string} namespace A namespace unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     * @return {Store} The Store instance.\n     */\n    value: function getOrCreate(trackingId, namespace, defaults) {\n      var key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n      // Don't create multiple instances for the same tracking Id and namespace.\n      if (!instances[key]) {\n        instances[key] = new Store(key, defaults);\n        if (!isListening) initStorageListener();\n      }\n      return instances[key];\n    }\n\n    /**\n     * Returns true if the browser supports and can successfully write to\n     * localStorage. The results is cached so this method can be invoked many\n     * times with no extra performance cost.\n     * @private\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isSupported_',\n    value: function isSupported_() {\n      if (browserSupportsLocalStorage != null) {\n        return browserSupportsLocalStorage;\n      }\n\n      try {\n        window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n        window.localStorage.removeItem(AUTOTRACK_PREFIX);\n        browserSupportsLocalStorage = true;\n      } catch (err) {\n        browserSupportsLocalStorage = false;\n      }\n      return browserSupportsLocalStorage;\n    }\n\n    /**\n     * Wraps the native localStorage method for each stubbing in tests.\n     * @private\n     * @param {string} key The store key.\n     * @return {string|null} The stored value.\n     */\n\n  }, {\n    key: 'get_',\n    value: function get_(key) {\n      return window.localStorage.getItem(key);\n    }\n\n    /**\n     * Wraps the native localStorage method for each stubbing in tests.\n     * @private\n     * @param {string} key The store key.\n     * @param {string} value The value to store.\n     */\n\n  }, {\n    key: 'set_',\n    value: function set_(key, value) {\n      window.localStorage.setItem(key, value);\n    }\n\n    /**\n     * Wraps the native localStorage method for each stubbing in tests.\n     * @private\n     * @param {string} key The store key.\n     */\n\n  }, {\n    key: 'clear_',\n    value: function clear_(key) {\n      window.localStorage.removeItem(key);\n    }\n\n    /**\n     * @param {string} key A key unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     */\n\n  }]);\n\n  function Store(key) {\n    var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Store);\n\n    var _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\n    _this.key_ = key;\n    _this.defaults_ = defaults;\n\n    /** @type {?Object} */\n    _this.cache_ = null; // Will be set after the first get.\n    return _this;\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n\n\n  _createClass(Store, [{\n    key: 'get',\n    value: function get() {\n      if (this.cache_) {\n        return this.cache_;\n      } else {\n        if (Store.isSupported_()) {\n          try {\n            this.cache_ = parse(Store.get_(this.key_));\n          } catch (err) {\n            // Do nothing.\n          }\n        }\n        return this.cache_ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, this.defaults_, this.cache_);\n      }\n    }\n\n    /**\n     * Saves the passed data object to localStorage,\n     * merging it with the existing data.\n     * @param {Object} newData The data to save.\n     */\n\n  }, {\n    key: 'set',\n    value: function set(newData) {\n      this.cache_ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, this.defaults_, this.cache_, newData);\n\n      if (Store.isSupported_()) {\n        try {\n          Store.set_(this.key_, JSON.stringify(this.cache_));\n        } catch (err) {\n          // Do nothing.\n        }\n      }\n    }\n\n    /**\n     * Clears the data in localStorage for the current store.\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.cache_ = {};\n      if (Store.isSupported_()) {\n        try {\n          Store.clear_(this.key_);\n        } catch (err) {\n          // Do nothing.\n        }\n      }\n    }\n\n    /**\n     * Removes the store instance for the global instances map. If this is the\n     * last store instance, the storage listener is also removed.\n     * Note: this does not erase the stored data. Use `clear()` for that.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete instances[this.key_];\n      if (!Object.keys(instances).length) {\n        removeStorageListener();\n      }\n    }\n  }]);\n\n  return Store;\n}(__WEBPACK_IMPORTED_MODULE_0__event_emitter__[\"a\" /* default */]);\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Store);\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  var store = instances[event.key];\n  if (store) {\n    var oldData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, store.defaults_, parse(event.oldValue));\n    var newData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, store.defaults_, parse(event.newValue));\n\n    store.cache_ = newData;\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  var data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */JSON.parse(source);\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = matches;\nvar proto = window.Element.prototype;\nvar nativeMatches = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nfunction matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, /** @type {string} */test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__method_chain__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__store__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar SECONDS = 1000;\nvar MINUTES = 60 * SECONDS;\n\nvar instances = {};\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\n\nvar Session = function () {\n  _createClass(Session, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguments or creates a new\n     * instance if one doesn't exist.\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     * @return {Session} The Session instance.\n     */\n    value: function getOrCreate(tracker, timeout, timeZone) {\n      // Don't create multiple instances for the same property.\n      var trackingId = tracker.get('trackingId');\n      if (instances[trackingId]) {\n        return instances[trackingId];\n      } else {\n        return instances[trackingId] = new Session(tracker, timeout, timeZone);\n      }\n    }\n\n    /**\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     */\n\n  }]);\n\n  function Session(tracker, timeout, timeZone) {\n    _classCallCheck(this, Session);\n\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter = new Intl.DateTimeFormat('en-US', { timeZone: this.timeZone });\n    } catch (err) {}\n    // Do nothing.\n\n\n    /** @type {SessionStoreData} */\n    var defaultProps = {\n      hitTime: 0,\n      isExpired: false\n    };\n    this.store = __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'session', defaultProps);\n\n    // Ensure the session has an ID.\n    if (!this.store.get().id) {\n      this.store.set( /** @type {SessionStoreData} */{ id: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"d\" /* uuid */])() });\n    }\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n\n\n  _createClass(Session, [{\n    key: 'getId',\n    value: function getId() {\n      return this.store.get().id;\n    }\n\n    /**\n     * Accepts a session ID and returns true if the specified session has\n     * evidentially expired. A session can expire for two reasons:\n     *   - More than 30 minutes has elapsed since the previous hit\n     *     was sent (The 30 minutes number is the Google Analytics default, but\n     *     it can be modified in GA admin \"Session settings\").\n     *   - A new day has started since the previous hit, in the\n     *     specified time zone (should correspond to the time zone of the\n     *     property's views).\n     *\n     * Note: since real session boundaries are determined at processing time,\n     * this is just a best guess rather than a source of truth.\n     *\n     * @param {string} id The ID of a session to check for expiry.\n     * @return {boolean} True if the session has not exp\n     */\n\n  }, {\n    key: 'isExpired',\n    value: function isExpired() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getId();\n\n      // If a session ID is passed and it doesn't match the current ID,\n      // assume it's from an expired session. If no ID is passed, assume the ID\n      // of the current session.\n      if (id != this.getId()) return true;\n\n      /** @type {SessionStoreData} */\n      var sessionData = this.store.get();\n\n      // `isExpired` will be `true` if the sessionControl field was set to\n      // 'end' on the previous hit.\n      if (sessionData.isExpired) return true;\n\n      var oldHitTime = sessionData.hitTime;\n\n      // Only consider a session expired if previous hit time data exists, and\n      // the previous hit time is greater than that session timeout period or\n      // the hits occurred on different days in the session timezone.\n      if (oldHitTime) {\n        var currentDate = new Date();\n        var oldHitDate = new Date(oldHitTime);\n        if (currentDate - oldHitDate > this.timeout * MINUTES || this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n          return true;\n        }\n      }\n\n      // For all other cases return false.\n      return false;\n    }\n\n    /**\n     * Returns true if (and only if) the timezone date formatting is supported\n     * in the current browser and if the two dates are definitively not the\n     * same date in the session timezone. Anything short of this returns false.\n     * @param {!Date} d1\n     * @param {!Date} d2\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'datesAreDifferentInTimezone',\n    value: function datesAreDifferentInTimezone(d1, d2) {\n      if (!this.dateTimeFormatter) {\n        return false;\n      } else {\n        return this.dateTimeFormatter.format(d1) != this.dateTimeFormatter.format(d2);\n      }\n    }\n\n    /**\n     * Keeps track of when the previous hit was sent to determine if a session\n     * has expired. Also inspects the `sessionControl` field to handles\n     * expiration accordingly.\n     * @param {function(!Model)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'sendHitTaskOverride',\n    value: function sendHitTaskOverride(originalMethod) {\n      var _this = this;\n\n      return function (model) {\n        originalMethod(model);\n\n        var sessionControl = model.get('sessionControl');\n        var sessionWillStart = sessionControl == 'start' || _this.isExpired();\n        var sessionWillEnd = sessionControl == 'end';\n\n        /** @type {SessionStoreData} */\n        var sessionData = _this.store.get();\n        sessionData.hitTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"f\" /* now */])();\n        if (sessionWillStart) {\n          sessionData.isExpired = false;\n          sessionData.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"d\" /* uuid */])();\n        }\n        if (sessionWillEnd) {\n          sessionData.isExpired = true;\n        }\n        _this.store.set(sessionData);\n      };\n    }\n\n    /**\n     * Restores the tracker's original `sendHitTask` to the state before\n     * session control was initialized and removes this instance from the global\n     * store.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n      this.store.destroy();\n      delete instances[this.tracker.get('trackingId')];\n    }\n  }]);\n\n  return Session;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Session);\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = closest;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__matches__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parents__ = __webpack_require__(10);\n\n\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nfunction closest(element, selector) {\n  var shouldCheckSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!(element && element.nodeType == 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__parents__[\"a\" /* default */])(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__matches__[\"a\" /* default */])(parent, selector)) return parent;\n  }\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parents;\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nfunction parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */element.parentNode;\n    list.push(element);\n  }\n  return list;\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return trackError; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_autotrack_lib_plugins_clean_url_tracker__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_autotrack_lib_plugins_event_tracker__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_autotrack_lib_plugins_max_scroll_tracker__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_autotrack_lib_plugins_media_query_tracker__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_autotrack_lib_plugins_outbound_link_tracker__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_autotrack_lib_plugins_page_visibility_tracker__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_autotrack_lib_plugins_social_widget_tracker__ = __webpack_require__(21);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\n\n\n\n\n/* global ga */\n\n/**\n * The tracking ID for your Google Analytics property.\n * https://support.google.com/analytics/answer/1032385\n */\nvar TRACKING_ID = 'UA-101915453-1';\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nvar TRACKING_VERSION = '3-zh';\n\n/**\n * A default value for dimensions so unset values always are reported as\n * something. This is needed since Google Analytics will drop empty dimension\n * values in reports.\n */\nvar NULL_VALUE = '(not set)';\n\n/**\n * A mapping between custom dimension names and their indexes.\n */\nvar dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  HIT_TYPE: 'dimension8',\n  HIT_TIME: 'dimension9',\n  HIT_ID: 'dimension10',\n  WINDOW_ID: 'dimension11',\n  VISIBILITY_STATE: 'dimension12',\n  TRACKING_VERSION: 'dimension13'\n};\n\n/**\n * A mapping between custom metric names and their indexes.\n */\nvar metrics = {\n  PAGE_VISIBLE: 'metric1',\n  MAX_SCROLL_PERCENTAGE: 'metric2',\n  PAGE_LOADS: 'metric3'\n};\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nvar init = function init() {\n  // Initialize the command queue in case analytics.js hasn't loaded yet.\n  window.ga = window.ga || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (ga.q = ga.q || []).push(args);\n  };\n\n  createTracker();\n  trackErrors();\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n};\n\n/**\n * Tracks a JavaScript error with optional fields object overrides.\n * This function is exported so it can be used in other parts of the codebase.\n * E.g.:\n *\n *    `fetch('/api.json').catch(trackError);`\n *\n * @param {(Error|Object)=} err\n * @param {Object=} fieldsObj\n */\nvar trackError = function trackError() {\n  var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var fieldsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  ga('send', 'event', Object.assign({\n    eventCategory: 'Error',\n    eventAction: err.name || '(no error name)',\n    eventLabel: err.message + '\\n' + (err.stack || '(no stack trace)'),\n    nonInteraction: true\n  }, fieldsObj));\n};\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nvar createTracker = function createTracker() {\n  ga('create', TRACKING_ID, 'auto', {\n    siteSpeedSampleRate: 10\n  });\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  ga('set', 'transport', 'beacon');\n\n  // Log hits in non-production environments.\n  if (false) {\n    ga('set', 'sendHitTask', function (model) {\n      var _window$console;\n\n      var paramsToIgnore = ['v', 'did', 't', 'tid', 'ec', 'ea', 'el', 'ev', 'a', 'z', 'ul', 'de', 'sd', 'sr', 'vp', 'je', 'fl', 'jid'];\n\n      var hitType = model.get('&t');\n      var hitPayload = model.get('hitPayload');\n      var hit = hitPayload.split('&').map(decodeURIComponent).filter(function (item) {\n        var _item$split = item.split('='),\n            _item$split2 = _slicedToArray(_item$split, 1),\n            param = _item$split2[0];\n\n        return !(param.charAt(0) === '_' || paramsToIgnore.indexOf(param) > -1);\n      });\n\n      var parts = [model.get('&tid'), hitType];\n      if (hitType == 'event') {\n        parts = [].concat(_toConsumableArray(parts), [model.get('&ec'), model.get('&ea'), model.get('&el')]);\n        if (model.get('&ev')) parts.push(model.get('&ev'));\n      }\n\n      (_window$console = window['console']).log.apply(_window$console, _toConsumableArray(parts).concat([hit]));\n    });\n  }\n};\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nvar trackErrors = function trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // `window.__e.q`, as specified in `index.html`.\n  var loadErrorEvents = window.__e && window.__e.q || [];\n\n  var trackErrorEvent = function trackErrorEvent(event) {\n    // Use a different eventCategory for uncaught errors.\n    var fieldsObj = { eventCategory: 'Uncaught Error' };\n\n    // Some browsers don't have an error property, so we fake it.\n    var err = event.error || {\n      message: event.message + ' (' + event.lineno + ':' + event.colno + ')'\n    };\n\n    trackError(err, fieldsObj);\n  };\n\n  // Replay any stored load error events.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = loadErrorEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var event = _step.value;\n\n      trackErrorEvent(event);\n    }\n\n    // Add a new listener to track event immediately.\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  window.addEventListener('error', trackErrorEvent);\n};\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nvar trackCustomDimensions = function trackCustomDimensions() {\n  // Sets a default dimension value for all custom dimensions to ensure\n  // that every dimension in every hit has *some* value. This is necessary\n  // because Google Analytics will drop rows with empty dimension values\n  // in your reports.\n  Object.keys(dimensions).forEach(function (key) {\n    ga('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  ga(function (tracker) {\n    var _tracker$set;\n\n    tracker.set((_tracker$set = {}, _defineProperty(_tracker$set, dimensions.TRACKING_VERSION, TRACKING_VERSION), _defineProperty(_tracker$set, dimensions.CLIENT_ID, tracker.get('clientId')), _defineProperty(_tracker$set, dimensions.WINDOW_ID, uuid()), _tracker$set));\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  ga(function (tracker) {\n    var originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', function (model) {\n      var qt = model.get('queueTime') || 0;\n      model.set(dimensions.HIT_TIME, String(new Date() - qt), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n\n      originalBuildHitTask(model);\n    });\n  });\n};\n\n/**\n * Requires select autotrack plugins and initializes each one with its\n * respective configuration options.\n */\nvar requireAutotrackPlugins = function requireAutotrackPlugins() {\n  ga('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add'\n  });\n  ga('require', 'eventTracker');\n  ga('require', 'maxScrollTracker', {\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    maxScrollMetricIndex: getDefinitionIndex(metrics.MAX_SCROLL_PERCENTAGE)\n  });\n  ga('require', 'mediaQueryTracker', {\n    definitions: [{\n      name: 'Breakpoint',\n      dimensionIndex: 1,\n      items: [{ name: 'xs', media: 'all' }, { name: 'sm', media: '(min-width: 384px)' }, { name: 'md', media: '(min-width: 576px)' }, { name: 'lg', media: '(min-width: 768px)' }]\n    }, {\n      name: 'Resolution',\n      dimensionIndex: 2,\n      items: [{ name: '1x', media: 'all' }, { name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' + '(min-resolution: 144dpi)' }, { name: '2x', media: '(-webkit-min-device-pixel-ratio: 2), ' + '(min-resolution: 192dpi)' }]\n    }, {\n      name: 'Orientation',\n      dimensionIndex: 3,\n      items: [{ name: 'landscape', media: '(orientation: landscape)' }, { name: 'portrait', media: '(orientation: portrait)' }]\n    }]\n  });\n  ga('require', 'outboundLinkTracker', {\n    events: ['click', 'auxclick', 'contextmenu']\n  });\n  ga('require', 'pageVisibilityTracker', {\n    sendInitialPageview: true,\n    pageLoadsMetricIndex: getDefinitionIndex(metrics.PAGE_LOADS),\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: _defineProperty({}, dimensions.HIT_SOURCE, 'pageVisibilityTracker')\n  });\n  ga('require', 'socialWidgetTracker');\n};\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nvar getDefinitionIndex = function getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n};\n\n/**\n * Generates a UUID.\n * https://gist.github.com/jed/982883\n * @param {string|undefined=} a\n * @return {string}\n */\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar supports = {};\nvar style = document.body.style;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  flexbox: function flexbox() {\n    return supports.flexbox || (supports.flexbox = 'flexBasis' in style || 'msFlexAlign' in style || 'webkitBoxDirection' in style);\n  }\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__analytics__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__supports__ = __webpack_require__(12);\n\n\n\nvar POLYFILL_PATH = \"/solved-by-flexbox/\" + 'polyfills.js';\n\n/**\n * The main script entry point for the site. Initalizes all the sub modules\n * analytics tracking, and the service worker.\n * @param {?Error} err Present if an error occurred loading the polyfills.\n */\nfunction main(err) {\n  // Add an `is-legacy` class on browsers that don't supports flexbox.\n  if (!__WEBPACK_IMPORTED_MODULE_1__supports__[\"a\" /* default */].flexbox()) {\n    var div = document.createElement('div');\n    div.className = 'Error';\n    div.innerHTML = 'Your browser does not support Flexbox.\\n                     Parts of this site may not appear as expected.';\n\n    document.body.insertBefore(div, document.body.firstChild);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_0__analytics__[\"a\" /* init */]();\n  if (err) {\n    __WEBPACK_IMPORTED_MODULE_0__analytics__[\"b\" /* trackError */](err);\n  }\n}\n\n/**\n * The primary site feature detect. Determines whether polyfills are needed.\n * @return {boolean} True if the browser supports all required features and\n *     no polyfills are needed.\n */\nfunction browserSupportsAllFeatures() {\n  return !!(window.Promise && window.Symbol);\n}\n\n/**\n * Creates a new `<script>` element for the passed `src`, and invokes the\n * passed callback once done.\n * @param {string} src The src attribute for the script.\n * @param {!Function<?Error>} done A callback to be invoked once the script has\n *     loaded, if an error occurs loading the script the function is invoked\n *     with the error object.\n */\nfunction loadScript(src, done) {\n  var js = document.createElement('script');\n  js.src = src;\n  js.onload = function () {\n    return done();\n  };\n  js.onerror = function () {\n    return done(new Error('Failed to load script ' + src));\n  };\n  document.head.appendChild(js);\n}\n\nif (browserSupportsAllFeatures()) {\n  main();\n} else {\n  loadScript(POLYFILL_PATH, main);\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nvar EventEmitter = function () {\n  /**\n   * Creates the event registry.\n   */\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(event, fn) {\n      this.getRegistry_(event).push(fn);\n    }\n\n    /**\n     * Removes a handler function from the registry for the passed event.\n     * @param {string=} event The event name.\n     * @param {Function=} fn The handler to be removed.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (event && fn) {\n        var eventRegistry = this.getRegistry_(event);\n        var handlerIndex = eventRegistry.indexOf(fn);\n        if (handlerIndex > -1) {\n          eventRegistry.splice(handlerIndex, 1);\n        }\n      } else {\n        this.registry_ = {};\n      }\n    }\n\n    /**\n     * Runs all registered handlers for the passed event with the optional args.\n     * @param {string} event The event name.\n     * @param {...*} args The arguments to be passed to the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this.getRegistry_(event).forEach(function (fn) {\n        return fn.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Returns the total number of event handlers currently registered.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getEventCount\",\n    value: function getEventCount() {\n      var _this = this;\n\n      var eventCount = 0;\n      Object.keys(this.registry_).forEach(function (event) {\n        eventCount += _this.getRegistry_(event).length;\n      });\n      return eventCount;\n    }\n\n    /**\n     * Returns an array of handlers associated with the passed event name.\n     * If no handlers have been registered, an empty array is returned.\n     * @private\n     * @param {string} event The event name.\n     * @return {!Array} An array of handler functions.\n     */\n\n  }, {\n    key: \"getRegistry_\",\n    value: function getRegistry_(event) {\n      return this.registry_[event] = this.registry_[event] || [];\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (EventEmitter);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__method_chain__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\n\nvar CleanUrlTracker = function () {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  function CleanUrlTracker(tracker, opts) {\n    _classCallCheck(this, CleanUrlTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_4__usage__[\"b\" /* plugins */].CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    var defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery && this.opts.queryDimensionIndex ? 'dimension' + this.opts.queryDimensionIndex : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'get', this.trackerGetOverride);\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n\n\n  _createClass(CleanUrlTracker, [{\n    key: 'trackerGetOverride',\n    value: function trackerGetOverride(originalMethod) {\n      var _this = this;\n\n      return function (field) {\n        if (field == 'page' || field == _this.queryDimension) {\n          var fieldsObj = /** @type {!FieldsObj} */{\n            location: originalMethod('location'),\n            page: originalMethod('page')\n          };\n          var cleanedFieldsObj = _this.cleanUrlFields(fieldsObj);\n          return cleanedFieldsObj[field];\n        } else {\n          return originalMethod(field);\n        }\n      };\n    }\n\n    /**\n     * Cleans URL fields passed in a send command.\n     * @param {function(!Model)} originalMethod A reference to the\n     *     overridden method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'buildHitTaskOverride',\n    value: function buildHitTaskOverride(originalMethod) {\n      var _this2 = this;\n\n      return function (model) {\n        var cleanedFieldsObj = _this2.cleanUrlFields({\n          location: model.get('location'),\n          page: model.get('page')\n        });\n        model.set(cleanedFieldsObj, null, true);\n        originalMethod(model);\n      };\n    }\n\n    /**\n     * Accepts of fields object containing URL fields and returns a new\n     * fields object with the URLs \"cleaned\" according to the tracker options.\n     * @param {!FieldsObj} fieldsObj\n     * @return {!FieldsObj}\n     */\n\n  }, {\n    key: 'cleanUrlFields',\n    value: function cleanUrlFields(fieldsObj) {\n      var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(\n      /** @type {string} */fieldsObj.page || fieldsObj.location);\n\n      var pathname = url.pathname;\n\n      // If an index filename was provided, remove it if it appears at the end\n      // of the URL.\n      if (this.opts.indexFilename) {\n        var parts = pathname.split('/');\n        if (this.opts.indexFilename == parts[parts.length - 1]) {\n          parts[parts.length - 1] = '';\n          pathname = parts.join('/');\n        }\n      }\n\n      // Ensure the URL ends with or doesn't end with slash based on the\n      // `trailingSlash` option. Note that filename URLs should never contain\n      // a trailing slash.\n      if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n      } else if (this.opts.trailingSlash == 'add') {\n        var isFilename = /\\.\\w+$/.test(pathname);\n        if (!isFilename && pathname.substr(-1) != '/') {\n          pathname = pathname + '/';\n        }\n      }\n\n      /** @type {!FieldsObj} */\n      var cleanedFieldsObj = {\n        page: pathname + (!this.opts.stripQuery ? url.search : '')\n      };\n      if (fieldsObj.location) {\n        cleanedFieldsObj.location = fieldsObj.location;\n      }\n      if (this.queryDimension) {\n        cleanedFieldsObj[this.queryDimension] = url.search.slice(1) || __WEBPACK_IMPORTED_MODULE_1__constants__[\"e\" /* NULL_DIMENSION */];\n      }\n\n      // Apply the `urlFieldsFilter()` option if passed.\n      if (typeof this.opts.urlFieldsFilter == 'function') {\n        /** @type {!FieldsObj} */\n        var userCleanedFieldsObj = this.opts.urlFieldsFilter(cleanedFieldsObj, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */]);\n\n        // Ensure only the URL fields are returned.\n        return _defineProperty({\n          page: userCleanedFieldsObj.page,\n          location: userCleanedFieldsObj.location\n        }, this.queryDimension, userCleanedFieldsObj[this.queryDimension]);\n      } else {\n        return cleanedFieldsObj;\n      }\n    }\n\n    /**\n     * Restores all overridden tasks and methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'get', this.trackerGetOverride);\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n    }\n  }]);\n\n  return CleanUrlTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__provide__[\"a\" /* default */])('cleanUrlTracker', CleanUrlTracker);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\n\nvar EventTracker = function () {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  function EventTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, EventTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    var selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, selector, _this.handleEvents, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n\n\n  _createClass(EventTracker, [{\n    key: 'handleEvents',\n    value: function handleEvents(event, element) {\n      var prefix = this.opts.attributePrefix;\n      var events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n      // Ensures the type matches one of the events specified on the element.\n      if (events.indexOf(event.type) < 0) return;\n\n      /** @type {FieldsObj} */\n      var defaultFields = { transport: 'beacon' };\n      var attributeFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"i\" /* getAttributeFields */])(element, prefix);\n      var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, this.opts.fieldsObj, attributeFields);\n      var hitType = attributeFields.hitType || 'event';\n\n      this.tracker.send(hitType, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, this.tracker, this.opts.hitFilter, element, event));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this2 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this2.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return EventTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('eventTracker', EventTracker);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__session__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\n\nvar MaxScrollTracker = function () {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function MaxScrollTracker(tracker, opts) {\n    _classCallCheck(this, MaxScrollTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_5__usage__[\"b\" /* plugins */].MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    var defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {}\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"k\" /* debounce */])(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].getOrCreate(tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n\n\n  _createClass(MaxScrollTracker, [{\n    key: 'listenForMaxScrollChanges',\n    value: function listenForMaxScrollChanges() {\n      var maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n      if (maxScrollPercentage < 100) {\n        window.addEventListener('scroll', this.handleScroll);\n      }\n    }\n\n    /**\n     * Removes an added scroll listener.\n     */\n\n  }, {\n    key: 'stopListeningForMaxScrollChanges',\n    value: function stopListeningForMaxScrollChanges() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    /**\n     * Handles the scroll event. If the current scroll percentage is greater\n     * that the stored scroll event by at least the specified increase threshold,\n     * send an event with the increase amount.\n     */\n\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll() {\n      var pageHeight = getPageHeight();\n      var scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n      var windowHeight = window.innerHeight;\n\n      // Ensure scrollPercentage is an integer between 0 and 100.\n      var scrollPercentage = Math.min(100, Math.max(0, Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n      // If the max scroll data gets out of the sync with the session data\n      // (for whatever reason), clear it.\n      var sessionId = this.session.getId();\n      if (sessionId != this.store.get().sessionId) {\n        this.store.clear();\n        this.store.set({ sessionId: sessionId });\n      }\n\n      // If the session has expired, clear the stored data and don't send any\n      // events (since they'd start a new session). Note: this check is needed,\n      // in addition to the above check, to handle cases where the session IDs\n      // got out of sync, but the session didn't expire.\n      if (this.session.isExpired(this.store.get().sessionId)) {\n        this.store.clear();\n      } else {\n        var maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n        if (scrollPercentage > maxScrollPercentage) {\n          if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n            this.stopListeningForMaxScrollChanges();\n          }\n          var increaseAmount = scrollPercentage - maxScrollPercentage;\n          if (scrollPercentage == 100 || increaseAmount >= this.opts.increaseThreshold) {\n            this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n            this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n          }\n        }\n      }\n    }\n\n    /**\n     * Detects changes to the tracker object and triggers an update if the page\n     * field has changed.\n     * @param {function((Object|string), (string|undefined))} originalMethod\n     *     A reference to the overridden method.\n     * @return {function((Object|string), (string|undefined))}\n     */\n\n  }, {\n    key: 'trackerSetOverride',\n    value: function trackerSetOverride(originalMethod) {\n      var _this = this;\n\n      return function (field, value) {\n        originalMethod(field, value);\n\n        /** @type {!FieldsObj} */\n        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"g\" /* isObject */])(field) ? field : _defineProperty({}, field, value);\n        if (fields.page) {\n          var lastPagePath = _this.pagePath;\n          _this.pagePath = _this.getPagePath();\n\n          if (_this.pagePath != lastPagePath) {\n            // Since event listeners for the same function are never added twice,\n            // we don't need to worry about whether we're already listening. We\n            // can just add the event listener again.\n            _this.listenForMaxScrollChanges();\n          }\n        }\n      };\n    }\n\n    /**\n     * Sends an event for the increased max scroll percentage amount.\n     * @param {number} increaseAmount\n     * @param {number} scrollPercentage\n     */\n\n  }, {\n    key: 'sendMaxScrollEvent',\n    value: function sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Max Scroll',\n        eventAction: 'increase',\n        eventValue: increaseAmount,\n        eventLabel: String(scrollPercentage),\n        nonInteraction: true\n      };\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.maxScrollMetricIndex) {\n        defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n      }\n\n      this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Stores the current max scroll percentage for the current page.\n     * @param {number} maxScrollPercentage\n     */\n\n  }, {\n    key: 'setMaxScrollPercentageForCurrentPage',\n    value: function setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n      var _store$set;\n\n      this.store.set((_store$set = {}, _defineProperty(_store$set, this.pagePath, maxScrollPercentage), _defineProperty(_store$set, 'sessionId', this.session.getId()), _store$set));\n    }\n\n    /**\n     * Gets the stored max scroll percentage for the current page.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getMaxScrollPercentageForCurrentPage',\n    value: function getMaxScrollPercentageForCurrentPage() {\n      return this.store.get()[this.pagePath] || 0;\n    }\n\n    /**\n     * Gets the page path from the tracker object.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getPagePath',\n    value: function getPagePath() {\n      var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(this.tracker.get('page') || this.tracker.get('location'));\n      return url.pathname + url.search;\n    }\n\n    /**\n     * Removes all event listeners and restores overridden methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.session.destroy();\n      this.stopListeningForMaxScrollChanges();\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(this.tracker, 'set', this.trackerSetOverride);\n    }\n  }]);\n\n  return MaxScrollTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__provide__[\"a\" /* default */])('maxScrollTracker', MaxScrollTracker);\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  var html = document.documentElement;\n  var body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight, body.offsetHeight, body.scrollHeight);\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nvar mediaMap = {};\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\n\nvar MediaQueryTracker = function () {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function MediaQueryTracker(tracker, opts) {\n    _classCallCheck(this, MediaQueryTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    var defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {}\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    // Exits early if media query data doesn't exist.\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"g\" /* isObject */])(this.opts.definitions)) return;\n\n    this.opts.definitions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"j\" /* toArray */])(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n\n\n  _createClass(MediaQueryTracker, [{\n    key: 'processMediaQueries',\n    value: function processMediaQueries() {\n      var _this = this;\n\n      this.opts.definitions.forEach(function (definition) {\n        // Only processes definitions with a name and index.\n        if (definition.name && definition.dimensionIndex) {\n          var mediaName = _this.getMatchName(definition);\n          _this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n          _this.addChangeListeners(definition);\n        }\n      });\n    }\n\n    /**\n     * Takes a definition object and return the name of the matching media item.\n     * If no match is found, the NULL_DIMENSION value is returned.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension.\n     * @return {string} The name of the matched media or NULL_DIMENSION.\n     */\n\n  }, {\n    key: 'getMatchName',\n    value: function getMatchName(definition) {\n      var match = void 0;\n\n      definition.items.forEach(function (item) {\n        if (getMediaList(item.media).matches) {\n          match = item;\n        }\n      });\n      return match ? match.name : __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */];\n    }\n\n    /**\n     * Adds change listeners to each media query in the definition list.\n     * Debounces the changes to prevent unnecessary hits from being sent.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension\n     */\n\n  }, {\n    key: 'addChangeListeners',\n    value: function addChangeListeners(definition) {\n      var _this2 = this;\n\n      definition.items.forEach(function (item) {\n        var mql = getMediaList(item.media);\n        var fn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"k\" /* debounce */])(function () {\n          _this2.handleChanges(definition);\n        }, _this2.opts.changeTimeout);\n\n        mql.addListener(fn);\n        _this2.changeListeners.push({ mql: mql, fn: fn });\n      });\n    }\n\n    /**\n     * Handles changes to the matched media. When the new value differs from\n     * the old value, a change event is sent.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension\n     */\n\n  }, {\n    key: 'handleChanges',\n    value: function handleChanges(definition) {\n      var newValue = this.getMatchName(definition);\n      var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n      if (newValue !== oldValue) {\n        this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n        /** @type {FieldsObj} */\n        var defaultFields = {\n          transport: 'beacon',\n          eventCategory: definition.name,\n          eventAction: 'change',\n          eventLabel: this.opts.changeTemplate(oldValue, newValue),\n          nonInteraction: true\n        };\n        this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n        listener.mql.removeListener(listener.fn);\n      }\n    }\n\n    /**\n     * Sets the default formatting of the change event label.\n     * This can be overridden by setting the `changeTemplate` option.\n     * @param {string} oldValue The value of the media query prior to the change.\n     * @param {string} newValue The value of the media query after the change.\n     * @return {string} The formatted event label.\n     */\n\n  }, {\n    key: 'changeTemplate',\n    value: function changeTemplate(oldValue, newValue) {\n      return oldValue + ' => ' + newValue;\n    }\n  }]);\n\n  return MediaQueryTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('mediaQueryTracker', MediaQueryTracker);\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\n\nvar OutboundLinkTracker = function () {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function OutboundLinkTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, OutboundLinkTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, _this.opts.linkSelector, _this.handleLinkInteractions, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n\n\n  _createClass(OutboundLinkTracker, [{\n    key: 'handleLinkInteractions',\n    value: function handleLinkInteractions(event, link) {\n      if (this.opts.shouldTrackOutboundLink(link, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])) {\n        var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n        var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(href);\n\n        /** @type {FieldsObj} */\n        var defaultFields = {\n          transport: 'beacon',\n          eventCategory: 'Outbound Link',\n          eventAction: event.type,\n          eventLabel: url.href\n        };\n\n        if (!navigator.sendBeacon && linkClickWillUnloadCurrentPage(event, link)) {\n          // Adds a new event handler at the last minute to minimize the chances\n          // that another event handler for this click will run after this logic.\n          window.addEventListener('click', function (event) {\n            // Checks to make sure another event handler hasn't already prevented\n            // the default action. If it has the custom redirect isn't needed.\n            if (!event.defaultPrevented) {\n              // Stops the click and waits until the hit is complete (with\n              // timeout) for browsers that don't support beacon.\n              event.preventDefault();\n              defaultFields.hitCallback = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"h\" /* withTimeout */])(function () {\n                location.href = href;\n              });\n            }\n          });\n        }\n\n        /** @type {FieldsObj} */\n        var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, this.opts.fieldsObj, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"i\" /* getAttributeFields */])(link, this.opts.attributePrefix));\n\n        this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, this.tracker, this.opts.hitFilter, link, event));\n      }\n    }\n\n    /**\n     * Determines whether or not the tracker should send a hit when a link is\n     * clicked. By default links with a hostname property not equal to the current\n     * hostname are tracked.\n     * @param {Element} link The link that was clicked on.\n     * @param {Function} parseUrlFn A cross-browser utility method for url\n     *     parsing (note: renamed to disambiguate when compiling).\n     * @return {boolean} Whether or not the link should be tracked.\n     */\n\n  }, {\n    key: 'shouldTrackOutboundLink',\n    value: function shouldTrackOutboundLink(link, parseUrlFn) {\n      var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      var url = parseUrlFn(href);\n      return url.hostname != location.hostname && url.protocol.slice(0, 4) == 'http';\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this2 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this2.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return OutboundLinkTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('outboundLinkTracker', OutboundLinkTracker);\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n  // The event type can be customized; we only care about clicks here.\n  event.type != 'click' ||\n  // Links with target=\"_blank\" set will open in a new window/tab.\n  link.target == '_blank' ||\n  // On mac, command clicking will open a link in a new tab. Control\n  // clicking does this on windows.\n  event.metaKey || event.ctrlKey ||\n  // Shift clicking in Chrome/Firefox opens the link in a new window\n  // In Safari it adds the URL to a favorites list.\n  event.shiftKey ||\n  // On Mac, clicking with the option key is used to download a resouce.\n  event.altKey ||\n  // Middle mouse button clicks (which == 2) are used to open a link\n  // in a new tab, and right clicks (which == 3) on Firefox trigger\n  // a click event.\n  event.which > 1);\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__session__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\nvar HIDDEN = 'hidden';\nvar VISIBLE = 'visible';\nvar PAGE_ID = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"d\" /* uuid */])();\nvar SECONDS = 1000;\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\n\nvar PageVisibilityTracker = function () {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function PageVisibilityTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, PageVisibilityTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_5__usage__[\"b\" /* plugins */].PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!document.visibilityState) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    var defaultOpts = {\n      sessionTimeout: __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].DEFAULT_TIMEOUT,\n      visibleThreshold: 5 * SECONDS,\n      // timeZone: undefined,\n      sendInitialPageview: false,\n      // pageLoadsMetricIndex: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {}\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n    this.lastPageState = document.visibilityState;\n    this.visibleThresholdTimeout_ = null;\n    this.isInitialPageviewSent_ = false;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].getOrCreate(tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'set', this.trackerSetOverride);\n\n    window.addEventListener('unload', this.handleWindowUnload);\n    document.addEventListener('visibilitychange', this.handleChange);\n\n    // Postpone sending any hits until the next call stack, which allows all\n    // autotrack plugins to be required sync before any hits are sent.\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* deferUntilPluginsLoaded */])(this.tracker, function () {\n      if (document.visibilityState == VISIBLE) {\n        if (_this.opts.sendInitialPageview) {\n          _this.sendPageview({ isPageLoad: true });\n          _this.isInitialPageviewSent_ = true;\n        }\n        _this.store.set( /** @type {PageVisibilityStoreData} */{\n          time: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* now */])(),\n          state: VISIBLE,\n          pageId: PAGE_ID,\n          sessionId: _this.session.getId()\n        });\n      } else {\n        if (_this.opts.sendInitialPageview && _this.opts.pageLoadsMetricIndex) {\n          _this.sendPageLoad();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n\n\n  _createClass(PageVisibilityTracker, [{\n    key: 'handleChange',\n    value: function handleChange() {\n      var _this2 = this;\n\n      if (!(document.visibilityState == VISIBLE || document.visibilityState == HIDDEN)) {\n        return;\n      }\n\n      var lastStoredChange = this.getAndValidateChangeData();\n\n      /** @type {PageVisibilityStoreData} */\n      var change = {\n        time: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* now */])(),\n        state: document.visibilityState,\n        pageId: PAGE_ID,\n        sessionId: this.session.getId()\n      };\n\n      // If the visibilityState has changed to visible and the initial pageview\n      // has not been sent (and the `sendInitialPageview` option is `true`).\n      // Send the initial pageview now.\n      if (document.visibilityState == VISIBLE && this.opts.sendInitialPageview && !this.isInitialPageviewSent_) {\n        this.sendPageview();\n        this.isInitialPageviewSent_ = true;\n      }\n\n      // If the visibilityState has changed to hidden, clear any scheduled\n      // pageviews waiting for the visibleThreshold timeout.\n      if (document.visibilityState == HIDDEN && this.visibleThresholdTimeout_) {\n        clearTimeout(this.visibleThresholdTimeout_);\n      }\n\n      if (this.session.isExpired(lastStoredChange.sessionId)) {\n        this.store.clear();\n        if (this.lastPageState == HIDDEN && document.visibilityState == VISIBLE) {\n          // If the session has expired, changes from hidden to visible should\n          // be considered a new pageview rather than a visibility event.\n          // This behavior ensures all sessions contain a pageview so\n          // session-level page dimensions and metrics (e.g. ga:landingPagePath\n          // and ga:entrances) are correct.\n          // Also, in order to prevent false positives, we add a small timeout\n          // that is cleared if the visibilityState changes to hidden shortly\n          // after the change to visible. This can happen if a user is quickly\n          // switching through their open tabs but not actually interacting with\n          // and of them. It can also happen when a user goes to a tab just to\n          // immediately close it. Such cases should not be considered pageviews.\n          clearTimeout(this.visibleThresholdTimeout_);\n          this.visibleThresholdTimeout_ = setTimeout(function () {\n            _this2.store.set(change);\n            _this2.sendPageview({ hitTime: change.time });\n          }, this.opts.visibleThreshold);\n        }\n      } else {\n        if (lastStoredChange.pageId == PAGE_ID && lastStoredChange.state == VISIBLE) {\n          this.sendPageVisibilityEvent(lastStoredChange);\n        }\n        this.store.set(change);\n      }\n\n      this.lastPageState = document.visibilityState;\n    }\n\n    /**\n     * Retroactively updates the stored change data in cases where it's known to\n     * be out of sync.\n     * This plugin keeps track of each visiblity change and stores the last one\n     * in localStorage. LocalStorage is used to handle situations where the user\n     * has multiple page open at the same time and we don't want to\n     * double-report page visibility in those cases.\n     * However, a problem can occur if a user closes a page when one or more\n     * visible pages are still open. In such cases it's impossible to know\n     * which of the remaining pages the user will interact with next.\n     * To solve this problem we wait for the next change on any page and then\n     * retroactively update the stored data to reflect the current page as being\n     * the page on which the last change event occured and measure visibility\n     * from that point.\n     * @return {!PageVisibilityStoreData}\n     */\n\n  }, {\n    key: 'getAndValidateChangeData',\n    value: function getAndValidateChangeData() {\n      var lastStoredChange =\n      /** @type {PageVisibilityStoreData} */this.store.get();\n\n      if (this.lastPageState == VISIBLE && lastStoredChange.state == HIDDEN && lastStoredChange.pageId != PAGE_ID) {\n        lastStoredChange.state = VISIBLE;\n        lastStoredChange.pageId = PAGE_ID;\n        this.store.set(lastStoredChange);\n      }\n      return lastStoredChange;\n    }\n\n    /**\n     * Sends a Page Visibility event to track the time this page was in the\n     * visible state (assuming it was in that state long enough to meet the\n     * threshold).\n     * @param {!PageVisibilityStoreData} lastStoredChange\n     * @param {{hitTime: (number|undefined)}=} param1\n     *     - hitTime: A hit timestap used to help ensure original order in cases\n     *                where the send is delayed.\n     */\n\n  }, {\n    key: 'sendPageVisibilityEvent',\n    value: function sendPageVisibilityEvent(lastStoredChange) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          hitTime = _ref.hitTime;\n\n      var delta = this.getTimeSinceLastStoredChange(lastStoredChange, { hitTime: hitTime });\n\n      // If the detla is greater than the visibileThreshold, report it.\n      if (delta && delta >= this.opts.visibleThreshold) {\n        var deltaInSeconds = Math.round(delta / SECONDS);\n\n        /** @type {FieldsObj} */\n        var defaultFields = {\n          transport: 'beacon',\n          nonInteraction: true,\n          eventCategory: 'Page Visibility',\n          eventAction: 'track',\n          eventValue: deltaInSeconds,\n          eventLabel: __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */]\n        };\n\n        if (hitTime) {\n          defaultFields.queueTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* now */])() - hitTime;\n        }\n\n        // If a custom metric was specified, set it equal to the event value.\n        if (this.opts.visibleMetricIndex) {\n          defaultFields['metric' + this.opts.visibleMetricIndex] = deltaInSeconds;\n        }\n\n        this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n\n    /**\n     * Sends a page load event.\n     */\n\n  }, {\n    key: 'sendPageLoad',\n    value: function sendPageLoad() {\n      var _defaultFields;\n\n      /** @type {FieldsObj} */\n      var defaultFields = (_defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Page Visibility',\n        eventAction: 'page load',\n        eventLabel: __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */]\n      }, _defineProperty(_defaultFields, 'metric' + this.opts.pageLoadsMetricIndex, 1), _defineProperty(_defaultFields, 'nonInteraction', true), _defaultFields);\n      this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Sends a pageview, optionally calculating an offset if hitTime is passed.\n     * @param {{\n     *   hitTime: (number|undefined),\n     *   isPageLoad: (boolean|undefined)\n     * }=} param1\n     *     hitTime: The timestamp of the current hit.\n     *     isPageLoad: True if this pageview was also a page load.\n     */\n\n  }, {\n    key: 'sendPageview',\n    value: function sendPageview() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          hitTime = _ref2.hitTime,\n          isPageLoad = _ref2.isPageLoad;\n\n      /** @type {FieldsObj} */\n      var defaultFields = { transport: 'beacon' };\n      if (hitTime) {\n        defaultFields.queueTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* now */])() - hitTime;\n      }\n      if (isPageLoad && this.opts.pageLoadsMetricIndex) {\n        defaultFields['metric' + this.opts.pageLoadsMetricIndex] = 1;\n      }\n\n      this.tracker.send('pageview', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Detects changes to the tracker object and triggers an update if the page\n     * field has changed.\n     * @param {function((Object|string), (string|undefined))} originalMethod\n     *     A reference to the overridden method.\n     * @return {function((Object|string), (string|undefined))}\n     */\n\n  }, {\n    key: 'trackerSetOverride',\n    value: function trackerSetOverride(originalMethod) {\n      var _this3 = this;\n\n      return function (field, value) {\n        /** @type {!FieldsObj} */\n        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"g\" /* isObject */])(field) ? field : _defineProperty({}, field, value);\n        if (fields.page && fields.page !== _this3.tracker.get('page')) {\n          if (_this3.lastPageState == VISIBLE) {\n            _this3.handleChange();\n          }\n        }\n        originalMethod(field, value);\n      };\n    }\n\n    /**\n     * Calculates the time since the last visibility change event in the current\n     * session. If the session has expired the reported time is zero.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @param {{hitTime: (number|undefined)}=} param1\n     *     hitTime: The time of the current hit (defaults to now).\n     * @return {number} The time (in ms) since the last change.\n     */\n\n  }, {\n    key: 'getTimeSinceLastStoredChange',\n    value: function getTimeSinceLastStoredChange(lastStoredChange) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          hitTime = _ref4.hitTime;\n\n      return lastStoredChange.time ? (hitTime || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* now */])()) - lastStoredChange.time : 0;\n    }\n\n    /**\n     * Handles responding to the `storage` event.\n     * The code on this page needs to be informed when other tabs or windows are\n     * updating the stored page visibility state data. This method checks to see\n     * if a hidden state is stored when there are still visible tabs open, which\n     * can happen if multiple windows are open at the same time.\n     * @param {PageVisibilityStoreData} newData\n     * @param {PageVisibilityStoreData} oldData\n     */\n\n  }, {\n    key: 'handleExternalStoreSet',\n    value: function handleExternalStoreSet(newData, oldData) {\n      // If the change times are the same, then the previous write only\n      // updated the active page ID. It didn't enter a new state and thus no\n      // hits should be sent.\n      if (newData.time == oldData.time) return;\n\n      // Page Visibility events must be sent by the tracker on the page\n      // where the original event occurred. So if a change happens on another\n      // page, but this page is where the previous change event occurred, then\n      // this page is the one that needs to send the event (so all dimension\n      // data is correct).\n      if (oldData.pageId == PAGE_ID && oldData.state == VISIBLE && !this.session.isExpired(oldData.sessionId)) {\n        this.sendPageVisibilityEvent(oldData, { hitTime: newData.time });\n      }\n    }\n\n    /**\n     * Handles responding to the `unload` event.\n     * Since some browsers don't emit a `visibilitychange` event in all cases\n     * where a page might be unloaded, it's necessary to hook into the `unload`\n     * event to ensure the correct state is always stored.\n     */\n\n  }, {\n    key: 'handleWindowUnload',\n    value: function handleWindowUnload() {\n      // If the stored visibility state isn't hidden when the unload event\n      // fires, it means the visibilitychange event didn't fire as the document\n      // was being unloaded, so we invoke it manually.\n      if (this.lastPageState != HIDDEN) {\n        this.handleChange();\n      }\n    }\n\n    /**\n     * Removes all event listeners and restores overridden methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.store.destroy();\n      this.session.destroy();\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(this.tracker, 'set', this.trackerSetOverride);\n      window.removeEventListener('unload', this.handleWindowUnload);\n      document.removeEventListener('visibilitychange', this.handleChange);\n    }\n  }]);\n\n  return PageVisibilityTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__provide__[\"a\" /* default */])('pageVisibilityTracker', PageVisibilityTracker);\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__provide__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__usage__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\n\nvar SocialWidgetTracker = function () {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function SocialWidgetTracker(tracker, opts) {\n    _classCallCheck(this, SocialWidgetTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_1__usage__[\"b\" /* plugins */].SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    var defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n\n\n  _createClass(SocialWidgetTracker, [{\n    key: 'addWidgetListeners',\n    value: function addWidgetListeners() {\n      if (window.FB) this.addFacebookEventHandlers();\n      if (window.twttr) this.addTwitterEventHandlers();\n    }\n\n    /**\n     * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons. Note: this does not capture tweet or\n     * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n     */\n\n  }, {\n    key: 'addTwitterEventHandlers',\n    value: function addTwitterEventHandlers() {\n      var _this = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.bind('tweet', _this.handleTweetEvents);\n          window.twttr.events.bind('follow', _this.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons.\n     */\n\n  }, {\n    key: 'removeTwitterEventHandlers',\n    value: function removeTwitterEventHandlers() {\n      var _this2 = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.unbind('tweet', _this2.handleTweetEvents);\n          window.twttr.events.unbind('follow', _this2.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'addFacebookEventHandlers',\n    value: function addFacebookEventHandlers() {\n      try {\n        window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'removeFacebookEventHandlers',\n    value: function removeFacebookEventHandlers() {\n      try {\n        window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Handles `tweet` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleTweetEvents',\n    value: function handleTweetEvents(event) {\n      // Ignores tweets from widgets that aren't the tweet button.\n      if (event.region != 'tweet') return;\n\n      var url = event.data.url || event.target.getAttribute('data-url') || location.href;\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'tweet',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter, event.target, event));\n    }\n\n    /**\n     * Handles `follow` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleFollowEvents',\n    value: function handleFollowEvents(event) {\n      // Ignore follows from widgets that aren't the follow button.\n      if (event.region != 'follow') return;\n\n      var screenName = event.data.screen_name || event.target.getAttribute('data-screen-name');\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'follow',\n        socialTarget: screenName\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter, event.target, event));\n    }\n\n    /**\n     * Handles `like` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the like event.\n     */\n\n  }, {\n    key: 'handleLikeEvents',\n    value: function handleLikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'like',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `unlike` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the unlike event.\n     */\n\n  }, {\n    key: 'handleUnlikeEvents',\n    value: function handleUnlikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'unlike',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      window.removeEventListener('load', this.addWidgetListeners);\n      this.removeFacebookEventHandlers();\n      this.removeTwitterEventHandlers();\n    }\n  }]);\n\n  return SocialWidgetTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__provide__[\"a\" /* default */])('socialWidgetTracker', SocialWidgetTracker);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = delegate;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__closest__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matches__ = __webpack_require__(7);\n\n\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nfunction delegate(ancestor, eventType, selector, callback) {\n  var opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  // Defines the event listener.\n  var listener = function listener(event) {\n    var delegateTarget = void 0;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      var composedPath = event.composedPath();\n      for (var i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__matches__[\"a\" /* default */])(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__closest__[\"a\" /* default */])(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function destroy() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nfunction dispatch(element, eventType) {\n  var eventName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Event';\n  var initDict = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var event = void 0;\n  var isCustom = void 0;\n\n  // eventName is optional\n  if ((typeof eventName === 'undefined' ? 'undefined' : _typeof(eventName)) == 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict.bubbles = initDict.bubbles || false;\n  initDict.cancelable = initDict.cancelable || false;\n  initDict.composed = initDict.composed || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch (err) {\n    event = document.createEvent(eventName);\n    var initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict.bubbles, initDict.cancelable, initDict.detail);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getAttributes;\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nfunction getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parseUrl;\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\nvar a = document.createElement('a');\nvar cache = {};\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nfunction parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = !url || url == '.' ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  var port = a.port == HTTP_PORT || a.port == HTTPS_PORT ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search\n  };\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/solved-by-flexbox/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f5b3990cefc548ee0410","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/utilities.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/provide.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/usage.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.3.3';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/constants.js","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/method-chain.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/** @type {boolean|undefined} */\nlet browserSupportsLocalStorage;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * Returns true if the browser supports and can successfully write to\n   * localStorage. The results is cached so this method can be invoked many\n   * times with no extra performance cost.\n   * @private\n   * @return {boolean}\n   */\n  static isSupported_() {\n    if (browserSupportsLocalStorage != null) {\n      return browserSupportsLocalStorage;\n    }\n\n    try {\n      window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n      window.localStorage.removeItem(AUTOTRACK_PREFIX);\n      browserSupportsLocalStorage = true;\n    } catch (err) {\n      browserSupportsLocalStorage = false;\n    }\n    return browserSupportsLocalStorage;\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @return {string|null} The stored value.\n   */\n  static get_(key) {\n    return window.localStorage.getItem(key);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @param {string} value The value to store.\n   */\n  static set_(key, value) {\n    window.localStorage.setItem(key, value);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   */\n  static clear_(key) {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults = {}) {\n    super();\n    this.key_ = key;\n    this.defaults_ = defaults;\n\n    /** @type {?Object} */\n    this.cache_ = null; // Will be set after the first get.\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    if (this.cache_) {\n      return this.cache_;\n    } else {\n      if (Store.isSupported_()) {\n        try {\n          this.cache_ = parse(Store.get_(this.key_));\n        } catch(err) {\n          // Do nothing.\n        }\n      }\n      return this.cache_ = assign({}, this.defaults_, this.cache_);\n    }\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    this.cache_ = assign({}, this.defaults_, this.cache_, newData);\n\n    if (Store.isSupported_()) {\n      try {\n        Store.set_(this.key_, JSON.stringify(this.cache_));\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    this.cache_ = {};\n    if (Store.isSupported_()) {\n      try {\n        Store.clear_(this.key_);\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key_];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = assign({}, store.defaults_, parse(event.oldValue));\n    const newData = assign({}, store.defaults_, parse(event.newValue));\n\n    store.cache_ = newData;\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  let data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */ (JSON.parse(source));\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/store.js","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/matches.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now, uuid} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n\n    // Ensure the session has an ID.\n    if (!this.store.get().id) {\n      this.store.set(/** @type {SessionStoreData} */ ({id: uuid()}));\n    }\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n  getId() {\n    return this.store.get().id;\n  }\n\n  /**\n   * Accepts a session ID and returns true if the specified session has\n   * evidentially expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {string} id The ID of a session to check for expiry.\n   * @return {boolean} True if the session has not exp\n   */\n  isExpired(id = this.getId()) {\n    // If a session ID is passed and it doesn't match the current ID,\n    // assume it's from an expired session. If no ID is passed, assume the ID\n    // of the current session.\n    if (id != this.getId()) return true;\n\n    /** @type {SessionStoreData} */\n    const sessionData = this.store.get();\n\n    // `isExpired` will be `true` if the sessionControl field was set to\n    // 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const oldHitTime = sessionData.hitTime;\n\n    // Only consider a session expired if previous hit time data exists, and\n    // the previous hit time is greater than that session timeout period or\n    // the hits occurred on different days in the session timezone.\n    if (oldHitTime) {\n      const currentDate = new Date();\n      const oldHitDate = new Date(oldHitTime);\n      if (currentDate - oldHitDate > (this.timeout * MINUTES) ||\n          this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are definitively not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionControl = model.get('sessionControl');\n      const sessionWillStart = sessionControl == 'start' || this.isExpired();\n      const sessionWillEnd = sessionControl == 'end';\n\n      /** @type {SessionStoreData} */\n      const sessionData = this.store.get();\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n        sessionData.id = uuid();\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    };\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/session.js","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/closest.js","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/parents.js","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/max-scroll-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n\n\n/* global ga */\n\n\n/**\n * The tracking ID for your Google Analytics property.\n * https://support.google.com/analytics/answer/1032385\n */\nconst TRACKING_ID = 'UA-101915453-1';\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nconst TRACKING_VERSION = '3-zh';\n\n\n/**\n * A default value for dimensions so unset values always are reported as\n * something. This is needed since Google Analytics will drop empty dimension\n * values in reports.\n */\nconst NULL_VALUE = '(not set)';\n\n\n/**\n * A mapping between custom dimension names and their indexes.\n */\nconst dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  HIT_TYPE: 'dimension8',\n  HIT_TIME: 'dimension9',\n  HIT_ID: 'dimension10',\n  WINDOW_ID: 'dimension11',\n  VISIBILITY_STATE: 'dimension12',\n  TRACKING_VERSION: 'dimension13',\n};\n\n\n/**\n * A mapping between custom metric names and their indexes.\n */\nconst metrics = {\n  PAGE_VISIBLE: 'metric1',\n  MAX_SCROLL_PERCENTAGE: 'metric2',\n  PAGE_LOADS: 'metric3',\n};\n\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nexport const init = () => {\n  // Initialize the command queue in case analytics.js hasn't loaded yet.\n  window.ga = window.ga || ((...args) => (ga.q = ga.q || []).push(args));\n\n  createTracker();\n  trackErrors();\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n};\n\n\n/**\n * Tracks a JavaScript error with optional fields object overrides.\n * This function is exported so it can be used in other parts of the codebase.\n * E.g.:\n *\n *    `fetch('/api.json').catch(trackError);`\n *\n * @param {(Error|Object)=} err\n * @param {Object=} fieldsObj\n */\nexport const trackError = (err = {}, fieldsObj = {}) => {\n  ga('send', 'event', Object.assign({\n    eventCategory: 'Error',\n    eventAction: err.name || '(no error name)',\n    eventLabel: `${err.message}\\n${err.stack || '(no stack trace)'}`,\n    nonInteraction: true,\n  }, fieldsObj));\n};\n\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nconst createTracker = () => {\n  ga('create', TRACKING_ID, 'auto', {\n    siteSpeedSampleRate: 10\n  });\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  ga('set', 'transport', 'beacon');\n\n  // Log hits in non-production environments.\n  if (process.env.NODE_ENV != 'production') {\n    ga('set', 'sendHitTask', function(model) {\n      var paramsToIgnore = ['v', 'did', 't', 'tid', 'ec', 'ea', 'el', 'ev',\n          'a', 'z', 'ul', 'de', 'sd', 'sr', 'vp', 'je', 'fl', 'jid'];\n\n      var hitType = model.get('&t');\n      var hitPayload = model.get('hitPayload');\n      var hit = hitPayload\n          .split('&')\n          .map(decodeURIComponent)\n          .filter((item) => {\n            const [param] = item.split('=');\n            return !(param.charAt(0) === '_' ||\n                paramsToIgnore.indexOf(param) > -1);\n          });\n\n      var parts = [model.get('&tid'), hitType];\n      if (hitType == 'event') {\n        parts = [\n          ...parts,\n          model.get('&ec'),\n          model.get('&ea'),\n          model.get('&el'),\n        ];\n        if (model.get('&ev')) parts.push(model.get('&ev'));\n      }\n\n      window['console'].log(...parts, hit);\n    });\n  }\n};\n\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nconst trackErrors = () => {\n  // Errors that have occurred prior to this script running are stored on\n  // `window.__e.q`, as specified in `index.html`.\n  const loadErrorEvents = window.__e && window.__e.q || [];\n\n  const trackErrorEvent = (event) => {\n    // Use a different eventCategory for uncaught errors.\n    const fieldsObj = {eventCategory: 'Uncaught Error'};\n\n    // Some browsers don't have an error property, so we fake it.\n    const err = event.error || {\n      message: `${event.message} (${event.lineno}:${event.colno})`,\n    };\n\n    trackError(err, fieldsObj);\n  };\n\n  // Replay any stored load error events.\n  for (let event of loadErrorEvents) {\n    trackErrorEvent(event);\n  }\n\n  // Add a new listener to track event immediately.\n  window.addEventListener('error', trackErrorEvent);\n};\n\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nconst trackCustomDimensions = () => {\n  // Sets a default dimension value for all custom dimensions to ensure\n  // that every dimension in every hit has *some* value. This is necessary\n  // because Google Analytics will drop rows with empty dimension values\n  // in your reports.\n  Object.keys(dimensions).forEach((key) => {\n    ga('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  ga((tracker) => {\n    tracker.set({\n      [dimensions.TRACKING_VERSION]: TRACKING_VERSION,\n      [dimensions.CLIENT_ID]: tracker.get('clientId'),\n      [dimensions.WINDOW_ID]: uuid(),\n    });\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  ga((tracker) => {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', (model) => {\n      const qt = model.get('queueTime') || 0;\n      model.set(dimensions.HIT_TIME, String(new Date - qt), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n\n      originalBuildHitTask(model);\n    });\n  });\n};\n\n\n/**\n * Requires select autotrack plugins and initializes each one with its\n * respective configuration options.\n */\nconst requireAutotrackPlugins = () => {\n  ga('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add',\n  });\n  ga('require', 'eventTracker');\n  ga('require', 'maxScrollTracker', {\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    maxScrollMetricIndex: getDefinitionIndex(metrics.MAX_SCROLL_PERCENTAGE),\n  });\n  ga('require', 'mediaQueryTracker', {\n    definitions: [\n      {\n        name: 'Breakpoint',\n        dimensionIndex: 1,\n        items: [\n          {name: 'xs', media: 'all'},\n          {name: 'sm', media: '(min-width: 384px)'},\n          {name: 'md', media: '(min-width: 576px)'},\n          {name: 'lg', media: '(min-width: 768px)'}\n        ]\n      },\n      {\n        name: 'Resolution',\n        dimensionIndex: 2,\n        items: [\n          {name: '1x',   media: 'all'},\n          {name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' +\n                                '(min-resolution: 144dpi)'},\n          {name: '2x',   media: '(-webkit-min-device-pixel-ratio: 2), ' +\n                                '(min-resolution: 192dpi)'},\n        ]\n      },\n      {\n        name: 'Orientation',\n        dimensionIndex: 3,\n        items: [\n          {name: 'landscape', media: '(orientation: landscape)'},\n          {name: 'portrait',  media: '(orientation: portrait)'}\n        ]\n      }\n    ]\n  });\n  ga('require', 'outboundLinkTracker', {\n    events: ['click', 'auxclick', 'contextmenu'],\n  });\n  ga('require', 'pageVisibilityTracker', {\n    sendInitialPageview: true,\n    pageLoadsMetricIndex: getDefinitionIndex(metrics.PAGE_LOADS),\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: {[dimensions.HIT_SOURCE]: 'pageVisibilityTracker'},\n  });\n  ga('require', 'socialWidgetTracker');\n};\n\n\n\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nconst getDefinitionIndex = (definition) => +/\\d+$/.exec(definition)[0];\n\n\n/**\n * Generates a UUID.\n * https://gist.github.com/jed/982883\n * @param {string|undefined=} a\n * @return {string}\n */\nconst uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) :\n      ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./assets/javascript/analytics.js","let supports = {};\nlet style = document.body.style;\n\nexport default {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./assets/javascript/supports.js","import * as analytics from './analytics';\nimport supports from './supports';\n\nconst POLYFILL_PATH = process.env.SBF_PUBLIC_PATH + 'polyfills.js';\n\n\n/**\n * The main script entry point for the site. Initalizes all the sub modules\n * analytics tracking, and the service worker.\n * @param {?Error} err Present if an error occurred loading the polyfills.\n */\nfunction main(err) {\n  // Add an `is-legacy` class on browsers that don't supports flexbox.\n  if (!supports.flexbox()) {\n    let div = document.createElement('div');\n    div.className = 'Error';\n    div.innerHTML = `Your browser does not support Flexbox.\n                     Parts of this site may not appear as expected.`;\n\n    document.body.insertBefore(div, document.body.firstChild);\n  }\n\n  analytics.init();\n  if (err) {\n    analytics.trackError(err);\n  }\n}\n\n\n/**\n * The primary site feature detect. Determines whether polyfills are needed.\n * @return {boolean} True if the browser supports all required features and\n *     no polyfills are needed.\n */\nfunction browserSupportsAllFeatures() {\n  return !!(window.Promise && window.Symbol);\n}\n\n\n/**\n * Creates a new `<script>` element for the passed `src`, and invokes the\n * passed callback once done.\n * @param {string} src The src attribute for the script.\n * @param {!Function<?Error>} done A callback to be invoked once the script has\n *     loaded, if an error occurs loading the script the function is invoked\n *     with the error object.\n */\nfunction loadScript(src, done) {\n  const js = document.createElement('script');\n  js.src = src;\n  js.onload = () => done();\n  js.onerror = () => done(new Error('Failed to load script ' + src));\n  document.head.appendChild(js);\n}\n\n\nif (browserSupportsAllFeatures()) {\n  main();\n} else {\n  loadScript(POLYFILL_PATH, main);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/javascript/main.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/event-emitter.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (!this.opts.stripQuery ? url.search : ''),\n    };\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      return {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n        [this.queryDimension]: userCleanedFieldsObj[this.queryDimension],\n      };\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/clean-url-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n    const events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n    // Ensures the type matches one of the events specified on the element.\n    if (events.indexOf(event.type) < 0) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element, event));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/event-tracker.js","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, debounce, isObject} from '../utilities';\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\nclass MaxScrollTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    const defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = debounce(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n  listenForMaxScrollChanges() {\n    const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n    if (maxScrollPercentage < 100) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n\n  /**\n   * Removes an added scroll listener.\n   */\n  stopListeningForMaxScrollChanges() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n\n  /**\n   * Handles the scroll event. If the current scroll percentage is greater\n   * that the stored scroll event by at least the specified increase threshold,\n   * send an event with the increase amount.\n   */\n  handleScroll() {\n    const pageHeight = getPageHeight();\n    const scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n    const windowHeight = window.innerHeight;\n\n    // Ensure scrollPercentage is an integer between 0 and 100.\n    const scrollPercentage = Math.min(100, Math.max(0,\n        Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n    // If the max scroll data gets out of the sync with the session data\n    // (for whatever reason), clear it.\n    const sessionId = this.session.getId();\n    if (sessionId != this.store.get().sessionId) {\n      this.store.clear();\n      this.store.set({sessionId});\n    }\n\n    // If the session has expired, clear the stored data and don't send any\n    // events (since they'd start a new session). Note: this check is needed,\n    // in addition to the above check, to handle cases where the session IDs\n    // got out of sync, but the session didn't expire.\n    if (this.session.isExpired(this.store.get().sessionId)) {\n      this.store.clear();\n    } else {\n      const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n      if (scrollPercentage > maxScrollPercentage) {\n        if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n          this.stopListeningForMaxScrollChanges();\n        }\n        const increaseAmount = scrollPercentage - maxScrollPercentage;\n        if (scrollPercentage == 100 ||\n            increaseAmount >= this.opts.increaseThreshold) {\n          this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n          this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n        }\n      }\n    }\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      originalMethod(field, value);\n\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page) {\n        const lastPagePath = this.pagePath;\n        this.pagePath = this.getPagePath();\n\n        if (this.pagePath != lastPagePath) {\n          // Since event listeners for the same function are never added twice,\n          // we don't need to worry about whether we're already listening. We\n          // can just add the event listener again.\n          this.listenForMaxScrollChanges();\n        }\n      }\n    };\n  }\n\n  /**\n   * Sends an event for the increased max scroll percentage amount.\n   * @param {number} increaseAmount\n   * @param {number} scrollPercentage\n   */\n  sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Max Scroll',\n      eventAction: 'increase',\n      eventValue: increaseAmount,\n      eventLabel: String(scrollPercentage),\n      nonInteraction: true,\n    };\n\n    // If a custom metric was specified, set it equal to the event value.\n    if (this.opts.maxScrollMetricIndex) {\n      defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Stores the current max scroll percentage for the current page.\n   * @param {number} maxScrollPercentage\n   */\n  setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n    this.store.set({\n      [this.pagePath]: maxScrollPercentage,\n      sessionId: this.session.getId(),\n    });\n  }\n\n  /**\n   * Gets the stored max scroll percentage for the current page.\n   * @return {number}\n   */\n  getMaxScrollPercentageForCurrentPage() {\n    return this.store.get()[this.pagePath] || 0;\n  }\n\n  /**\n   * Gets the page path from the tracker object.\n   * @return {number}\n   */\n  getPagePath() {\n    const url = parseUrl(\n        this.tracker.get('page') || this.tracker.get('location'));\n    return url.pathname + url.search;\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    this.stopListeningForMaxScrollChanges();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n  }\n}\n\n\nprovide('maxScrollTracker', MaxScrollTracker);\n\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  const html = document.documentElement;\n  const body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight,\n      body.offsetHeight, body.scrollHeight);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/max-scroll-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        debounce, isObject, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n      };\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/media-query-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        window.addEventListener('click', function(event) {\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n            defaultFields.hitCallback = withTimeout(function() {\n              location.href = href;\n            });\n          }\n        });\n      }\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, userFields,\n              this.tracker, this.opts.hitFilter, link, event));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/outbound-link-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, deferUntilPluginsLoaded,\n    isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!document.visibilityState) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      visibleThreshold: 5 * SECONDS,\n      // timeZone: undefined,\n      sendInitialPageview: false,\n      // pageLoadsMetricIndex: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.lastPageState = document.visibilityState;\n    this.visibleThresholdTimeout_ = null;\n    this.isInitialPageviewSent_ = false;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    window.addEventListener('unload', this.handleWindowUnload);\n    document.addEventListener('visibilitychange', this.handleChange);\n\n    // Postpone sending any hits until the next call stack, which allows all\n    // autotrack plugins to be required sync before any hits are sent.\n    deferUntilPluginsLoaded(this.tracker, () => {\n      if (document.visibilityState == VISIBLE) {\n        if (this.opts.sendInitialPageview) {\n          this.sendPageview({isPageLoad: true});\n          this.isInitialPageviewSent_ = true;\n        }\n        this.store.set(/** @type {PageVisibilityStoreData} */ ({\n          time: now(),\n          state: VISIBLE,\n          pageId: PAGE_ID,\n          sessionId: this.session.getId(),\n        }));\n      } else {\n        if (this.opts.sendInitialPageview && this.opts.pageLoadsMetricIndex) {\n          this.sendPageLoad();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    if (!(document.visibilityState == VISIBLE ||\n        document.visibilityState == HIDDEN)) {\n      return;\n    }\n\n    const lastStoredChange = this.getAndValidateChangeData();\n\n    /** @type {PageVisibilityStoreData} */\n    const change = {\n      time: now(),\n      state: document.visibilityState,\n      pageId: PAGE_ID,\n      sessionId: this.session.getId(),\n    };\n\n    // If the visibilityState has changed to visible and the initial pageview\n    // has not been sent (and the `sendInitialPageview` option is `true`).\n    // Send the initial pageview now.\n    if (document.visibilityState == VISIBLE &&\n        this.opts.sendInitialPageview && !this.isInitialPageviewSent_) {\n      this.sendPageview();\n      this.isInitialPageviewSent_ = true;\n    }\n\n    // If the visibilityState has changed to hidden, clear any scheduled\n    // pageviews waiting for the visibleThreshold timeout.\n    if (document.visibilityState == HIDDEN && this.visibleThresholdTimeout_) {\n      clearTimeout(this.visibleThresholdTimeout_);\n    }\n\n    if (this.session.isExpired(lastStoredChange.sessionId)) {\n      this.store.clear();\n      if (this.lastPageState == HIDDEN &&\n          document.visibilityState == VISIBLE) {\n        // If the session has expired, changes from hidden to visible should\n        // be considered a new pageview rather than a visibility event.\n        // This behavior ensures all sessions contain a pageview so\n        // session-level page dimensions and metrics (e.g. ga:landingPagePath\n        // and ga:entrances) are correct.\n        // Also, in order to prevent false positives, we add a small timeout\n        // that is cleared if the visibilityState changes to hidden shortly\n        // after the change to visible. This can happen if a user is quickly\n        // switching through their open tabs but not actually interacting with\n        // and of them. It can also happen when a user goes to a tab just to\n        // immediately close it. Such cases should not be considered pageviews.\n        clearTimeout(this.visibleThresholdTimeout_);\n        this.visibleThresholdTimeout_ = setTimeout(() => {\n          this.store.set(change);\n          this.sendPageview({hitTime: change.time});\n        }, this.opts.visibleThreshold);\n      }\n    } else {\n      if (lastStoredChange.pageId == PAGE_ID &&\n          lastStoredChange.state == VISIBLE) {\n        this.sendPageVisibilityEvent(lastStoredChange);\n      }\n      this.store.set(change);\n    }\n\n    this.lastPageState = document.visibilityState;\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @return {!PageVisibilityStoreData}\n   */\n  getAndValidateChangeData() {\n    const lastStoredChange =\n        /** @type {PageVisibilityStoreData} */ (this.store.get());\n\n    if (this.lastPageState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.set(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event to track the time this page was in the\n   * visible state (assuming it was in that state long enough to meet the\n   * threshold).\n   * @param {!PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     - hitTime: A hit timestap used to help ensure original order in cases\n   *                where the send is delayed.\n   */\n  sendPageVisibilityEvent(lastStoredChange, {hitTime} = {}) {\n    const delta = this.getTimeSinceLastStoredChange(\n        lastStoredChange, {hitTime});\n\n    // If the detla is greater than the visibileThreshold, report it.\n    if (delta && delta >= this.opts.visibleThreshold) {\n      const deltaInSeconds = Math.round(delta / SECONDS);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        nonInteraction: true,\n        eventCategory: 'Page Visibility',\n        eventAction: 'track',\n        eventValue: deltaInSeconds,\n        eventLabel: NULL_DIMENSION,\n      };\n\n      if (hitTime) {\n        defaultFields.queueTime = now() - hitTime;\n      }\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.visibleMetricIndex) {\n        defaultFields['metric' + this.opts.visibleMetricIndex] = deltaInSeconds;\n      }\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Sends a page load event.\n   */\n  sendPageLoad() {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'page load',\n      eventLabel: NULL_DIMENSION,\n      ['metric' + this.opts.pageLoadsMetricIndex]: 1,\n      nonInteraction: true,\n    };\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Sends a pageview, optionally calculating an offset if hitTime is passed.\n   * @param {{\n   *   hitTime: (number|undefined),\n   *   isPageLoad: (boolean|undefined)\n   * }=} param1\n   *     hitTime: The timestamp of the current hit.\n   *     isPageLoad: True if this pageview was also a page load.\n   */\n  sendPageview({hitTime, isPageLoad} = {}) {\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    if (hitTime) {\n      defaultFields.queueTime = now() - hitTime;\n    }\n    if (isPageLoad && this.opts.pageLoadsMetricIndex) {\n      defaultFields['metric' + this.opts.pageLoadsMetricIndex] = 1;\n    }\n\n    this.tracker.send('pageview',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(field, value);\n    };\n  }\n\n  /**\n   * Calculates the time since the last visibility change event in the current\n   * session. If the session has expired the reported time is zero.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     hitTime: The time of the current hit (defaults to now).\n   * @return {number} The time (in ms) since the last change.\n   */\n  getTimeSinceLastStoredChange(lastStoredChange, {hitTime} = {}) {\n    return lastStoredChange.time ?\n        (hitTime || now()) - lastStoredChange.time : 0;\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {PageVisibilityStoreData} newData\n   * @param {PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE &&\n        !this.session.isExpired(oldData.sessionId)) {\n      this.sendPageVisibilityEvent(oldData, {hitTime: newData.time});\n    }\n  }\n\n  /**\n   * Handles responding to the `unload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the `unload`\n   * event to ensure the correct state is always stored.\n   */\n  handleWindowUnload() {\n    // If the stored visibility state isn't hidden when the unload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.store.destroy();\n    this.session.destroy();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    window.removeEventListener('unload', this.handleWindowUnload);\n    document.removeEventListener('visibilitychange', this.handleChange);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/page-visibility-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\nclass SocialWidgetTracker {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    const defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n  addWidgetListeners() {\n    if (window.FB) this.addFacebookEventHandlers();\n    if (window.twttr) this.addTwitterEventHandlers();\n  }\n\n  /**\n   * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons. Note: this does not capture tweet or\n   * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n   */\n  addTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.bind('tweet', this.handleTweetEvents);\n        window.twttr.events.bind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons.\n   */\n  removeTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.unbind('tweet', this.handleTweetEvents);\n        window.twttr.events.unbind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  addFacebookEventHandlers() {\n    try {\n      window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  removeFacebookEventHandlers() {\n    try {\n      window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Handles `tweet` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleTweetEvents(event) {\n    // Ignores tweets from widgets that aren't the tweet button.\n    if (event.region != 'tweet') return;\n\n    const url = event.data.url || event.target.getAttribute('data-url') ||\n        location.href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'tweet',\n      socialTarget: url,\n    };\n    this.tracker.send('social',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter, event.target, event));\n  }\n\n  /**\n   * Handles `follow` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleFollowEvents(event) {\n    // Ignore follows from widgets that aren't the follow button.\n    if (event.region != 'follow') return;\n\n    const screenName = event.data.screen_name ||\n        event.target.getAttribute('data-screen-name');\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'follow',\n      socialTarget: screenName,\n    };\n    this.tracker.send('social',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter, event.target, event));\n  }\n\n  /**\n   * Handles `like` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the like event.\n   */\n  handleLikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'like',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `unlike` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the unlike event.\n   */\n  handleUnlikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'unlike',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    window.removeEventListener('load', this.addWidgetListeners);\n    this.removeFacebookEventHandlers();\n    this.removeTwitterEventHandlers();\n  }\n}\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/social-widget-tracker.js","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/delegate.js","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/get-attributes.js","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/~/dom-utils/lib/parse-url.js"],"sourceRoot":""}